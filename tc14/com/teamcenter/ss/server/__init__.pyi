import System
import System.Globalization
import Teamcenter.Net.TcSSProxy.Client
import Teamcenter_SSO.sso_applib.com.teamcenter._ss.server
import Teamcenter_SSO.sso_applib.com.teamcenter.ss.server
import com.teamcenter.ss
import typing

class JsonSSOAppSession(Teamcenter_SSO.sso_applib.com.teamcenter.ss.server.AbstractSSOAppSession):
    @typing.overload
    def __init__(self, appId: str, sessionHandle: str, ssoServiceURL: str) -> None: ...
    @typing.overload
    def __init__(self, appId: str, sessionHandle: str, ssoServiceURL: str, commsTokens: list[com.teamcenter.ss.SSOToken]) -> None: ...
    @typing.overload
    def __init__(self, appId: str, sessionHandle: str, ssoServiceURL: str, commsTokens: list[com.teamcenter.ss.SSOToken], serviceBinding: Teamcenter_SSO.sso_applib.com.teamcenter._ss.server.ISSOServiceBinding) -> None: ...
    def authenticate(self, credentials: com.teamcenter.ss.SSOLoginInput) -> com.teamcenter.ss.SSOLoginStatus: ...
    def logout(self) -> None: ...
    def resetSessionHandle(self, newSessionHandle: str) -> None: ...
    @typing.overload
    def generateSSOTokens(self, targetAppId: str) -> list[com.teamcenter.ss.SSOToken]: ...
    @typing.overload
    def generateSSOTokens(self, targetAppId: str, pseudoAppId: str) -> list[com.teamcenter.ss.SSOToken]: ...
    def generateAsyncSSOTokens(self, targetAppId: str, pseudoAppId: str) -> list[com.teamcenter.ss.SSOToken]: ...
    @typing.overload
    def generateSSOAppToken(self, targetAppId: str) -> com.teamcenter.ss.SSOAppToken: ...
    @typing.overload
    def generateSSOAppToken(self, targetAppId: str, pseudoAppId: str) -> com.teamcenter.ss.SSOAppToken: ...
    def generateAsyncSSOAppToken(self, targetAppId: str, pseudoAppId: str) -> com.teamcenter.ss.SSOAppToken: ...
    def reauthenticate(self, credentials: com.teamcenter.ss.SSOLoginInput) -> com.teamcenter.ss.SSOLoginStatus: ...
    def validateAppToken(self, userId: str, sessionKey: str) -> None: ...
    def getUserAttributes(self, userAttributes: list[str]) -> com.teamcenter.ss.SSOStringHashtable: ...
    def getAppInfo(self, targetAppid: str) -> com.teamcenter.ss.SSOStringHashtable: ...
    def getSessionHandle(self) -> str: ...
    def getAppUserId(self) -> str: ...
    def getLocale(self) -> System.Globalization.CultureInfo: ...
    def getLoginInput(self) -> com.teamcenter.ss.SSOLoginInput: ...

class SSOAppSessionImpl:
    def __init__(self, appId: str, sessionHandle: str, ssoService: str) -> None: ...
    def getSessionHandle(self) -> str: ...
    def getLoginInput(self) -> Teamcenter.Net.TcSSProxy.Client.ISSOLoginInput: ...
    def generateSSOTokens(self, targetAppId: str) -> list[Teamcenter.Net.TcSSProxy.Client.ISSOToken]: ...
    def generateSSOAppToken(self, targetAppId: str) -> Teamcenter.Net.TcSSProxy.Client.ISSOAppToken: ...
    def validateAppToken(self, userId: str, sessionKey: str) -> None: ...
    def authenticate(self, credentials: Teamcenter.Net.TcSSProxy.Client.ISSOLoginInput) -> Teamcenter.Net.TcSSProxy.Client.ISSOLoginStatus: ...
    def logout(self) -> None: ...

class <>c:
    def __init__(self, ) -> None: ...
    <>9: <>c
    <>9__16_0: dict[str, bool]

