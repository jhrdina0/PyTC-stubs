import System
import System.Collections
import com.teamcenter.ss.util
import typing

class HttpCookieToken(SSOToken):
    @typing.overload
    def __init__(self, name: str, value_Renamed: str) -> None: ...
    @typing.overload
    def __init__(self, name: str, value_Renamed: str, path: str) -> None: ...
    @typing.overload
    def __init__(self, name: str, value: com.teamcenter.ss.util.ObjectWrapper, path: com.teamcenter.ss.util.ObjectWrapper) -> None: ...
    def getName(self) -> str: ...
    def getValue(self) -> str: ...
    def setValue(self, value: str) -> None: ...
    def getPath(self) -> str: ...
    def getConstructionalProperties(self) -> System.Collections.ArrayList: ...
    def GetHashCode(self) -> int: ...
    def equals(self, obj: typing.Any) -> bool: ...

class HttpCookieTokenImpl(HttpCookieToken):
    @typing.overload
    def __init__(self, name: str, value_Renamed: str) -> None: ...
    @typing.overload
    def __init__(self, name: str, value_Renamed: str, path: str) -> None: ...
    @typing.overload
    def __init__(self, name: str, value: com.teamcenter.ss.util.ObjectWrapper, path: com.teamcenter.ss.util.ObjectWrapper) -> None: ...

class HttpHeaderToken(SSOToken):
    @typing.overload
    def __init__(self, name: str, value_Renamed: str) -> None: ...
    @typing.overload
    def __init__(self, name: str, value: com.teamcenter.ss.util.ObjectWrapper) -> None: ...
    def getName(self) -> str: ...
    def setValue(self, value: str) -> None: ...
    def getValue(self) -> str: ...
    def getConstructionalProperties(self) -> System.Collections.ArrayList: ...
    def GetHashCode(self) -> int: ...
    def Equals(self, obj: typing.Any) -> bool: ...

class SSOAppToken(SSOToken):
    def __init__(self, appUserId: str, ssoSessionKey: str) -> None: ...
    def getAppUserId(self) -> str: ...
    def getSSOSessionKey(self) -> str: ...
    def getConstructionalProperties(self) -> System.Collections.ArrayList: ...
    def GetHashCode(self) -> int: ...
    def Equals(self, obj: typing.Any) -> bool: ...
    def dumpState(self) -> None: ...

class SSOAppTokenImpl(SSOAppToken):
    @typing.overload
    def __init__(self, appToken: SSOAppToken) -> None: ...
    @typing.overload
    def __init__(self, appUserId: str, ssoSessionKey: str) -> None: ...

class SSOAuthorizationException(SSOException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...

class SSOConfigurationException(SSOException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...
    @typing.overload
    def __init__(self, message: str, cause: System.Exception) -> None: ...
    @typing.overload
    def __init__(self, cause: System.Exception) -> None: ...

class SSODecoderException(SSOException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...

class SSODuplicateHandleException(SSOException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...

class SSOException(com.teamcenter.ss.util.CompatibleCausallyException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...
    @typing.overload
    def __init__(self, message: str, cause: System.Exception) -> None: ...
    @typing.overload
    def __init__(self, cause: System.Exception) -> None: ...

class SSOInvalidSessionException(SSOException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...

class SSOInvalidTokenException(SSOException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...

class SSOLoginFailureException(SSOException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...

class SSOLoginInput(SSOStringHashtable):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, loginInput: SSOLoginInput) -> None: ...
    USERNAME: str
    PASSWORD: str
    LOCALE: str
    NEWPASSWORD: str
    def put(self, key: typing.Any, val: typing.Any) -> typing.Any: ...

class SSOLoginInputImpl:
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, loginInput: SSOLoginInput) -> None: ...
    def USERNAME(self) -> str: ...
    def PASSWORD(self) -> str: ...
    def LOCALE(self) -> str: ...
    def NEWPASSWORD(self) -> str: ...
    def get(self, key: typing.Any) -> typing.Any: ...
    def put(self, key: typing.Any, val: typing.Any) -> typing.Any: ...
    def inner(self) -> SSOLoginInput: ...

class SSOLoginStatus:
    @typing.overload
    def __init__(self, authenticated: bool) -> None: ...
    @typing.overload
    def __init__(self, map: System.Collections.Hashtable, authenticated: bool) -> None: ...
    def setIsAuthenticated(self, isAuth: bool) -> None: ...
    def getLoginReturnStatus(self) -> System.Collections.Hashtable: ...
    def getConstructionalProperties(self) -> System.Collections.ArrayList: ...
    def userIsAuthenticated(self) -> bool: ...
    def setValue(self, key: str, val: str) -> None: ...

class SSOLoginStatusImpl(SSOLoginStatus):
    def __init__(self, status: SSOLoginStatus) -> None: ...

class SSOStringHashtable(System.Collections.Hashtable):
    def __init__(self, ) -> None: ...
    def put(self, key: typing.Any, val: typing.Any) -> typing.Any: ...

class SSOSystemException(SSOException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...
    @typing.overload
    def __init__(self, message: str, cause: System.Exception) -> None: ...
    @typing.overload
    def __init__(self, cause: System.Exception) -> None: ...

class SSOToken:
    def getConstructionalProperties(self) -> System.Collections.ArrayList: ...
    def ToString(self) -> str: ...

class SSOTokenImpl(SSOToken):
    pass

