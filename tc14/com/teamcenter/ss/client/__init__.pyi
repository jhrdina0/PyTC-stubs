import System
import System.Collections.Specialized
import System.Globalization
import Teamcenter.Net.TcSSProxy.Client
import com.teamcenter.ss
import typing

class SSOClient:
    @typing.overload
    def __init__(self, ssoLoginURL: str) -> None: ...
    @typing.overload
    def __init__(self, ssoLoginURL: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...
    def setBrowser(self, browserLaunch: str) -> None: ...
    def getSSOSession(self, new_session: bool) -> SSOSession: ...

class SSOClientImpl:
    def __init__(self, ssoLoginURL: str) -> None: ...
    def getSSOSession(self, new_session: bool) -> Teamcenter.Net.TcSSProxy.Client.ISSOSession: ...

class SSOLoginCancelledException(com.teamcenter.ss.SSOException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...

class SSOSession:
    def __init__(self , *args: typing.Any) -> None: ...
    def getLocale(self) -> System.Globalization.CultureInfo: ...
    @typing.overload
    def generateSSOTokens(self, appID: str) -> list[com.teamcenter.ss.SSOToken]: ...
    @typing.overload
    def generateSSOTokens(self, AppID: str, pseudoAppID: str) -> list[com.teamcenter.ss.SSOToken]: ...
    @typing.overload
    def generateSSOAppToken(self, appID: str) -> com.teamcenter.ss.SSOAppToken: ...
    @typing.overload
    def generateSSOAppToken(self, AppID: str, pseudoAppID: str) -> com.teamcenter.ss.SSOAppToken: ...
    def getProxyAuthorizationCookie(self, appID: str) -> list[com.teamcenter.ss.HttpCookieToken]: ...

class SSOSessionImpl:
    def __init__(self, sess: SSOSession) -> None: ...
    def getStringLocale(self) -> str: ...
    @typing.overload
    def generateSSOTokens(self, appID: str) -> list[Teamcenter.Net.TcSSProxy.Client.ISSOToken]: ...
    @typing.overload
    def generateSSOTokens(self, appID: str, pseudoAppID: str) -> list[Teamcenter.Net.TcSSProxy.Client.ISSOToken]: ...
    @typing.overload
    def generateSSOAppToken(self, appID: str) -> Teamcenter.Net.TcSSProxy.Client.ISSOAppToken: ...
    @typing.overload
    def generateSSOAppToken(self, AppID: str, pseudoAppID: str) -> Teamcenter.Net.TcSSProxy.Client.ISSOAppToken: ...
    def getProxyAuthorizationCookie(self, appID: str) -> list[Teamcenter.Net.TcSSProxy.Client.IHttpCookieToken]: ...

class SSOSessionInitializer:
    def __init__(self , *args: typing.Any) -> None: ...
    def setLoginURL(self, ssoLoginURL: str) -> None: ...
    def setConfig(self, config: System.Collections.Specialized.NameValueCollection) -> None: ...
    def getExistingSession(self) -> SSOSession: ...
    def startNewSession(self) -> SSOSession: ...

