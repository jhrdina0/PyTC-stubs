import Serilog.Events
import System
import System.Collections.Generic
import System.IO

class LiteralStringValue(Serilog.Events.LogEventPropertyValue):
    def __init__(self, value: str) -> None: ...
    def Render(self, output: System.IO.TextWriter, format: str, formatProvider: System.IFormatProvider) -> None: ...
    def Equals(self, obj: typing.Any) -> bool: ...
    def GetHashCode(self) -> int: ...

class LogEventLevelValue(Serilog.Events.LogEventPropertyValue):
    def __init__(self, value: Serilog.Events.LogEventLevel) -> None: ...
    def Render(self, output: System.IO.TextWriter, format: str, formatProvider: System.IFormatProvider) -> None: ...

class LogEventPropertiesValue(Serilog.Events.LogEventPropertyValue):
    def __init__(self, template: Serilog.Events.MessageTemplate, properties: dict[str, Serilog.Events.LogEventPropertyValue], outputTemplate: Serilog.Events.MessageTemplate) -> None: ...
    def Render(self, output: System.IO.TextWriter, format: str, formatProvider: System.IFormatProvider) -> None: ...

class LogEventPropertyMessageValue(Serilog.Events.LogEventPropertyValue):
    def __init__(self, template: Serilog.Events.MessageTemplate, properties: dict[str, Serilog.Events.LogEventPropertyValue]) -> None: ...
    def Render(self, output: System.IO.TextWriter, format: str, formatProvider: System.IFormatProvider) -> None: ...

