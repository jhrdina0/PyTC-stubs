import Serilog.Data
import Serilog.Events
import Serilog.Sinks.SystemConsole.Themes
import System
import System.IO

class ThemedDisplayValueFormatter(ThemedValueFormatter):
    def __init__(self, theme: Serilog.Sinks.SystemConsole.Themes.ConsoleTheme, formatProvider: System.IFormatProvider) -> None: ...
    def SwitchTheme(self, theme: Serilog.Sinks.SystemConsole.Themes.ConsoleTheme) -> ThemedValueFormatter: ...
    def FormatLiteralValue(self, scalar: Serilog.Events.ScalarValue, output: System.IO.TextWriter, format: str) -> int: ...

class ThemedJsonValueFormatter(ThemedValueFormatter):
    def __init__(self, theme: Serilog.Sinks.SystemConsole.Themes.ConsoleTheme, formatProvider: System.IFormatProvider) -> None: ...
    def SwitchTheme(self, theme: Serilog.Sinks.SystemConsole.Themes.ConsoleTheme) -> ThemedValueFormatter: ...

class ThemedValueFormatter(dict[ThemedValueFormatterState, int]):
    def Format(self, value: Serilog.Events.LogEventPropertyValue, output: System.IO.TextWriter, format: str, literalTopLevel: bool = False) -> int: ...
    @staticmethod
    def SwitchTheme(theme: Serilog.Sinks.SystemConsole.Themes.ConsoleTheme) -> ThemedValueFormatter: ...

