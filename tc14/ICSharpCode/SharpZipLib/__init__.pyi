import System
import typing

class SharpZipBaseException(System.Exception):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...
    @typing.overload
    def __init__(self, message: str, innerException: System.Exception) -> None: ...

class StreamDecodingException(SharpZipBaseException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...
    @typing.overload
    def __init__(self, message: str, innerException: System.Exception) -> None: ...

class StreamUnsupportedException(StreamDecodingException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...
    @typing.overload
    def __init__(self, message: str, innerException: System.Exception) -> None: ...

class UnexpectedEndOfStreamException(StreamDecodingException):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...
    @typing.overload
    def __init__(self, message: str, innerException: System.Exception) -> None: ...

class ValueOutOfRangeException(StreamDecodingException):
    @typing.overload
    def __init__(self, nameOfValue: str) -> None: ...
    @typing.overload
    def __init__(self, nameOfValue: str, value: int, maxValue: int, minValue: int = 0) -> None: ...
    @typing.overload
    def __init__(self, nameOfValue: str, value: str, maxValue: str, minValue: str = '0') -> None: ...

