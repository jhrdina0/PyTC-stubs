import Fnd0.Services.Internal.Strong.Notification._2014_10.SubscriptionManagement
import Fnd0.Services.Internal.Strong.Notification._2015_03.MessageManagement
import Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement
import Fnd0.Services.Internal.Strong.Notification._2015_10.MessageManagement
import Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement
import Fnd0.Services.Internal.Strong.Notification._2017_11.SubscriptionManagement
import Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement
import System
import Teamcenter.Soa.Client
import Teamcenter.Soa.Client.Model
import Teamcenter.Soa.Client.Model.Strong

class MessageManagementRestBindingStub(MessageManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetUserGroupAlias(self) -> Fnd0.Services.Internal.Strong.Notification._2015_03.MessageManagement.UserGroupAliasResponse: ...
    def GetUnreadMessages(self) -> Fnd0.Services.Internal.Strong.Notification._2015_10.MessageManagement.UnreadMessages: ...
    def InitializeAsynchMessaging(self) -> str: ...

class MessageManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> MessageManagementService: ...
    def GetUserGroupAlias(self) -> Fnd0.Services.Internal.Strong.Notification._2015_03.MessageManagement.UserGroupAliasResponse: ...
    def GetUnreadMessages(self) -> Fnd0.Services.Internal.Strong.Notification._2015_10.MessageManagement.UnreadMessages: ...
    def InitializeAsynchMessaging(self) -> str: ...

class SubscriptionManagementRestBindingStub(SubscriptionManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetSubscriptionConditions(self) -> Fnd0.Services.Internal.Strong.Notification._2014_10.SubscriptionManagement.GetSubscriptionConditionsResponse: ...
    def CreateSubscriptions(self, Inputs: list[Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.SubscriptionInput2]) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def FindSubscriptions(self, Input: Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.FindSubscriptionsInput2) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def GetAssignEventData(self) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetAssignEventDataResponse: ...
    def GetAttachEventData(self, Target: Teamcenter.Soa.Client.Model.ModelObject) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetAttachEventDataResponse: ...
    def GetEventTypes2(self, Input: list[Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.EventObject]) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetEventTypesResponse: ...
    def GetSubscribableTypes(self, ChildTypeOption: str) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetSubscribableTypesResponse: ...
    def GetSubscriptionInput(self, Input: Teamcenter.Soa.Client.Model.ModelObject) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetSubscriptionInputResponse: ...
    def ModifySubscriptions(self, Inputs: list[Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.ModifySubscriptionsInput2]) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def TransferNotifications(self, Input: Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.TransferNotificationInput) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def CreateSubscriptionTemplates(self, Inputs: list[Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SubscriptionTemplate]) -> Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SubscriptionTemplateResponse: ...
    def GetApplicableSubscriptionTemplates(self, SubscribedObject: Teamcenter.Soa.Client.Model.ModelObject) -> Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SubscriptionTemplateResponse: ...
    def GetAttachEventData2(self, Target: Teamcenter.Soa.Client.Model.ModelObject) -> Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.GetAttachEventDataResponse2: ...
    def ModifySubscriptionTemplates(self, Inputs: list[Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.ModifySubscriptionTemplateInput]) -> Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SubscriptionTemplateResponse: ...
    def SaveAsSubscription(self, Input: Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SaveAsSubscriptionInputData) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def Unsubscribe(self, Subscriptions: list[Teamcenter.Soa.Client.Model.Strong.ImanSubscription]) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def GetSubscribableProperties(self, SubscribableObjectTypes: list[Teamcenter.Soa.Client.Model.ModelObject]) -> Fnd0.Services.Internal.Strong.Notification._2017_11.SubscriptionManagement.GetSubscribablePropertiesResponse: ...

class SubscriptionManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> SubscriptionManagementService: ...
    def GetSubscriptionConditions(self) -> Fnd0.Services.Internal.Strong.Notification._2014_10.SubscriptionManagement.GetSubscriptionConditionsResponse: ...
    def CreateSubscriptions(self, Inputs: list[Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.SubscriptionInput2]) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def FindSubscriptions(self, Input: Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.FindSubscriptionsInput2) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def GetAssignEventData(self) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetAssignEventDataResponse: ...
    def GetAttachEventData(self, Target: Teamcenter.Soa.Client.Model.ModelObject) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetAttachEventDataResponse: ...
    def GetEventTypes2(self, Input: list[Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.EventObject]) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetEventTypesResponse: ...
    def GetSubscribableTypes(self, ChildTypeOption: str) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetSubscribableTypesResponse: ...
    def GetSubscriptionInput(self, Input: Teamcenter.Soa.Client.Model.ModelObject) -> Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.GetSubscriptionInputResponse: ...
    def ModifySubscriptions(self, Inputs: list[Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.ModifySubscriptionsInput2]) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def TransferNotifications(self, Input: Fnd0.Services.Internal.Strong.Notification._2015_03.SubscriptionManagement.TransferNotificationInput) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def CreateSubscriptionTemplates(self, Inputs: list[Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SubscriptionTemplate]) -> Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SubscriptionTemplateResponse: ...
    def GetApplicableSubscriptionTemplates(self, SubscribedObject: Teamcenter.Soa.Client.Model.ModelObject) -> Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SubscriptionTemplateResponse: ...
    def GetAttachEventData2(self, Target: Teamcenter.Soa.Client.Model.ModelObject) -> Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.GetAttachEventDataResponse2: ...
    def ModifySubscriptionTemplates(self, Inputs: list[Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.ModifySubscriptionTemplateInput]) -> Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SubscriptionTemplateResponse: ...
    def SaveAsSubscription(self, Input: Fnd0.Services.Internal.Strong.Notification._2015_10.SubscriptionManagement.SaveAsSubscriptionInputData) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def Unsubscribe(self, Subscriptions: list[Teamcenter.Soa.Client.Model.Strong.ImanSubscription]) -> Fnd0.Services.Strong.Notification._2014_10.SubscriptionManagement.SubscriptionsResponse: ...
    def GetSubscribableProperties(self, SubscribableObjectTypes: list[Teamcenter.Soa.Client.Model.ModelObject]) -> Fnd0.Services.Internal.Strong.Notification._2017_11.SubscriptionManagement.GetSubscribablePropertiesResponse: ...

