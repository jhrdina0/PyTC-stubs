import System
import System.Collections
import System.Collections.Specialized
import typing

import System
import System.Collections
import System.Collections.Specialized

import System
import System.Collections
import System.Collections.Specialized

import System
import System.Collections
import System.Collections.Specialized

import System
import System.Collections
import System.Collections.Specialized

import System
import System.Collections
import System.Collections.Specialized

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider
import typing

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider
import typing

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider
import typing

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider
import typing

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider
import typing

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider
import typing

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider
import typing

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider

import System
import System.Collections
import System.Collections.Specialized
import System.Configuration.Provider

from System import Array, Boolean, Exception, Int32, Object, String, Void
from System.Collections import IEnumerator
from System.Collections.Specialized import NameValueCollection
from System.Configuration.Provider import ProviderBase

from System import Array, Boolean, Exception, Int32, Object, String, Void
from System.Collections import IEnumerator
from System.Collections.Specialized import NameValueCollection
from System.Configuration.Provider import ProviderBase

    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: ProviderBase[], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(name: str, config: NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(provider: ProviderBase) -> None: ...
    def Remove(name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(array: list[ProviderBase], index: int) -> None: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(provider: ProviderBase) -> Void: ...
    def Remove(name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(array: list[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(provider: ProviderBase) -> Void: ...
    def Remove(name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(provider: ProviderBase) -> Void: ...
    def Remove(name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(provider: ProviderBase) -> Void: ...
    def Remove(name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(self, name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(self, name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(self, provider: ProviderBase) -> Void: ...
    def Remove(self, name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(self, array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(self, name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(self, name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(self, provider: ProviderBase) -> Void: ...
    def Remove(self, name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(self, array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(self, name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(self, name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(self, provider: ProviderBase) -> Void: ...
    def Remove(self, name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(self, array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(self, name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(self, name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(self, provider: ProviderBase) -> Void: ...
    def Remove(self, name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(self, array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(self, name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(self, name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(self, provider: ProviderBase) -> Void: ...
    def Remove(self, name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(self, array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(self, name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(self, name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(self, provider: ProviderBase) -> Void: ...
    def Remove(self, name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(self, array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: String
    Description: String
    def get_Name(self) -> String: ...
    def get_Description(self) -> String: ...
    def Initialize(self, name: String, config: NameValueCollection) -> Void: ...

class ProviderCollection:
    Item: ProviderBase
    Count: Int32
    IsSynchronized: Boolean
    SyncRoot: Object
    def get_Item(self, name: String) -> ProviderBase: ...
    def GetEnumerator(self) -> IEnumerator: ...
    def get_Count(self) -> Int32: ...
    def get_IsSynchronized(self) -> Boolean: ...
    def get_SyncRoot(self) -> Object: ...
    def Add(self, provider: ProviderBase) -> Void: ...
    def Remove(self, name: String) -> Void: ...
    def SetReadOnly(self) -> Void: ...
    def Clear(self) -> Void: ...
    def CopyTo(self, array: Array[ProviderBase], index: Int32) -> Void: ...

class ProviderException(Exception):
    pass

class ProviderBase:
    Name: System.String
    Description: System.String
    def get_Name(self) -> System.String: ...
    def get_Description(self) -> System.String: ...
    def Initialize(self, name: System.String, config: System.Collections.Specialized.NameValueCollection) -> System.Void: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: System.Int32
    IsSynchronized: System.Boolean
    SyncRoot: System.Object
    def get_Item(self, name: System.String) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> System.Int32: ...
    def get_IsSynchronized(self) -> System.Boolean: ...
    def get_SyncRoot(self) -> System.Object: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> System.Void: ...
    def Remove(self, name: System.String) -> System.Void: ...
    def SetReadOnly(self) -> System.Void: ...
    def Clear(self) -> System.Void: ...
    def CopyTo(self, array: System.Array[System.Configuration.Provider.ProviderBase], index: System.Int32) -> System.Void: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: System.String
    Description: System.String
    def get_Name(self) -> System.String: ...
    def get_Description(self) -> System.String: ...
    def Initialize(self, name: System.String, config: System.Collections.Specialized.NameValueCollection) -> System.Void: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: System.Int32
    IsSynchronized: System.Boolean
    SyncRoot: System.Object
    def get_Item(self, name: System.String) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> System.Int32: ...
    def get_IsSynchronized(self) -> System.Boolean: ...
    def get_SyncRoot(self) -> System.Object: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> System.Void: ...
    def Remove(self, name: System.String) -> System.Void: ...
    def SetReadOnly(self) -> System.Void: ...
    def Clear(self) -> System.Void: ...
    def CopyTo(self, array: System.Array[System.Configuration.Provider.ProviderBase], index: System.Int32) -> System.Void: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: System.String
    Description: System.String
    def get_Name(self) -> System.String: ...
    def get_Description(self) -> System.String: ...
    def Initialize(self, name: System.String, config: System.Collections.Specialized.NameValueCollection) -> System.Void: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: System.Int32
    IsSynchronized: System.Boolean
    SyncRoot: System.Object
    def get_Item(self, name: System.String) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> System.Int32: ...
    def get_IsSynchronized(self) -> System.Boolean: ...
    def get_SyncRoot(self) -> System.Object: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> System.Void: ...
    def Remove(self, name: System.String) -> System.Void: ...
    def SetReadOnly(self) -> System.Void: ...
    def Clear(self) -> System.Void: ...
    def CopyTo(self, array: list[System.Configuration.Provider.ProviderBase], index: System.Int32) -> System.Void: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(self, name: str) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[System.Configuration.Provider.ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(self, name: str) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[System.Configuration.Provider.ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(self, name: str) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[System.Configuration.Provider.ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(self, name: str) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[System.Configuration.Provider.ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(self, name: str) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[System.Configuration.Provider.ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    @staticmethod
    def get_Name(self) -> str: ...
    @staticmethod
    def get_Description(self) -> str: ...
    @staticmethod
    def Initialize(name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    @staticmethod
    def get_Item(name: str) -> System.Configuration.Provider.ProviderBase: ...
    @staticmethod
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    @staticmethod
    def get_Count(self) -> int: ...
    @staticmethod
    def get_IsSynchronized(self) -> bool: ...
    @staticmethod
    def get_SyncRoot(self) -> Any: ...
    @staticmethod
    def Add(provider: System.Configuration.Provider.ProviderBase) -> None: ...
    @staticmethod
    def Remove(name: str) -> None: ...
    @staticmethod
    def SetReadOnly(self) -> None: ...
    @staticmethod
    def Clear(self) -> None: ...
    @staticmethod
    def CopyTo(array: list[System.Configuration.Provider.ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(self, name: str) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[System.Configuration.Provider.ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(self, name: str) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[System.Configuration.Provider.ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: System.Configuration.Provider.ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: Any
    def get_Item(self, name: str) -> System.Configuration.Provider.ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> Any: ...
    def Add(self, provider: System.Configuration.Provider.ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[System.Configuration.Provider.ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: typing.Any
    def get_Item(self, name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> typing.Any: ...
    def Add(self, provider: ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: typing.Any
    def get_Item(self, name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> typing.Any: ...
    def Add(self, provider: ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: typing.Any
    def get_Item(self, name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> typing.Any: ...
    def Add(self, provider: ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: typing.Any
    def get_Item(self, name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> typing.Any: ...
    def Add(self, provider: ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: typing.Any
    def get_Item(self, name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> typing.Any: ...
    def Add(self, provider: ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    pass

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: typing.Any
    def get_Item(self, name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> typing.Any: ...
    def Add(self, provider: ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[ProviderBase], index: int) -> None: ...
    def __init__(self, ) -> ProviderCollection: ...

class ProviderException(System.Exception):
    def __init__(self, ) -> ProviderException: ...
    def __init__(self, message: str) -> ProviderException: ...
    def __init__(self, message: str, innerException: System.Exception) -> ProviderException: ...

class ProviderBase:
    Name: str
    Description: str
    def get_Name(self) -> str: ...
    def get_Description(self) -> str: ...
    def Initialize(self, name: str, config: System.Collections.Specialized.NameValueCollection) -> None: ...

class ProviderCollection:
    def __init__(self, ) -> None: ...
    Item: ProviderBase
    Count: int
    IsSynchronized: bool
    SyncRoot: typing.Any
    def get_Item(self, name: str) -> ProviderBase: ...
    def GetEnumerator(self) -> System.Collections.IEnumerator: ...
    def get_Count(self) -> int: ...
    def get_IsSynchronized(self) -> bool: ...
    def get_SyncRoot(self) -> typing.Any: ...
    def Add(self, provider: ProviderBase) -> None: ...
    def Remove(self, name: str) -> None: ...
    def SetReadOnly(self) -> None: ...
    def Clear(self) -> None: ...
    def CopyTo(self, array: list[ProviderBase], index: int) -> None: ...

class ProviderException(System.Exception):
    @typing.overload
    def __init__(self, ) -> None: ...
    @typing.overload
    def __init__(self, message: str) -> None: ...
    @typing.overload
    def __init__(self, message: str, innerException: System.Exception) -> None: ...

