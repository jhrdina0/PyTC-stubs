import System
import System.Collections.Generic
import System.Net
import com.teamcenter.ss
import typing

class ISSOServiceBinding:
    def __init__(self , *args: typing.Any) -> None: ...
    def SendRequest(self, payload: dict[str, typing.Any]) -> dict[str, typing.Any]: ...
    def Init(self, URLstr: str, commsTokens: list[com.teamcenter.ss.SSOToken]) -> None: ...

class JsonHttpBinding:
    def __init__(self, ) -> None: ...
    @typing.overload
    def Init(self, URLstr: str, commsTokens: list[com.teamcenter.ss.SSOToken]) -> None: ...
    @typing.overload
    def Init(self, URLstr: str, commsTokens: list[com.teamcenter.ss.SSOToken], creator: IWebRequestCreator) -> None: ...
    def SendRequest(self, payload: dict[str, typing.Any]) -> dict[str, typing.Any]: ...

class IWebRequestCreator:
    def __init__(self , *args: typing.Any) -> None: ...
    def CreateWebRequest(self, uri: System.Uri) -> System.Net.WebRequest: ...

class DefaultWebRequestCreator:
    def __init__(self, ) -> None: ...
    def CreateWebRequest(self, uri: System.Uri) -> System.Net.WebRequest: ...

