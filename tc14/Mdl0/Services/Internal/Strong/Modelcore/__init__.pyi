import Mdl0.Services.Internal.Strong.Modelcore._2017_05.ModelConfiguration
import Mdl0.Services.Internal.Strong.Modelcore._2017_05.Search
import System
import System.Collections
import Teamcenter.Soa.Client
import Teamcenter.Soa.Client.Model.Strong

class ModelConfigurationRestBindingStub(ModelConfigurationService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetCalculatedEffectivity(self, RevisionRule: Teamcenter.Soa.Client.Model.Strong.RevisionRule, InputObjects: System.Collections.Hashtable, ProductName: str, ProductNamespace: str, ConfiguratorURL: str) -> Mdl0.Services.Internal.Strong.Modelcore._2017_05.ModelConfiguration.CalculatedEffectivityResponse: ...

class ModelConfigurationService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> ModelConfigurationService: ...
    def GetCalculatedEffectivity(self, RevisionRule: Teamcenter.Soa.Client.Model.Strong.RevisionRule, InputObjects: System.Collections.Hashtable, ProductName: str, ProductNamespace: str, ConfiguratorURL: str) -> Mdl0.Services.Internal.Strong.Modelcore._2017_05.ModelConfiguration.CalculatedEffectivityResponse: ...

class SearchRestBindingStub(SearchService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def CreateRecipeContainers(self, RecipeContainerInfos: list[Mdl0.Services.Internal.Strong.Modelcore._2017_05.Search.RecipeContainerInfo]) -> Mdl0.Services.Internal.Strong.Modelcore._2017_05.Search.RecipeContainerResponse: ...

class SearchService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> SearchService: ...
    def CreateRecipeContainers(self, RecipeContainerInfos: list[Mdl0.Services.Internal.Strong.Modelcore._2017_05.Search.RecipeContainerInfo]) -> Mdl0.Services.Internal.Strong.Modelcore._2017_05.Search.RecipeContainerResponse: ...

