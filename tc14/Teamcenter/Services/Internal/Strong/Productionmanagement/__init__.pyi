import System
import Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.EngineeringDataQuery
import Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.MeasurementDataQuery
import Teamcenter.Services.Internal.Strong.Productionmanagement._2018_11.MeasurementDataQuery
import Teamcenter.Services.Internal.Strong.Productionmanagement._2020_01.EngineeringDataLoad
import Teamcenter.Services.Internal.Strong.Productionmanagement._2020_12.EngineeringDataLoad
import Teamcenter.Services.Internal.Strong.Productionmanagement._2021_12.EngineeringDataLoad
import Teamcenter.Soa.Client
import Teamcenter.Soa.Client.Model

class EngineeringDataLoadRestBindingStub(EngineeringDataLoadService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def UpdateEngineeringExcel(self, RoutineID: str, RoutineRev: str, FeatureRows: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2020_01.EngineeringDataLoad.Features]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def UpdateEngineeringWorkbook(self, RoutineID: str, RoutineRev: str, FeatureRows: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2020_01.EngineeringDataLoad.Features]) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2020_12.EngineeringDataLoad.UpdateEngineeringWorkbookResponse: ...
    def GetFNPFieldsSheetInfo(self, RoutineID: str, RoutineRev: str) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2021_12.EngineeringDataLoad.GetFNPFieldsSheetInfoResponse: ...
    def UpdateEngineeringWorkbook2(self, RoutineID: str, RoutineRev: str, FeatureRows: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2020_01.EngineeringDataLoad.Features], FeatureParamSheetData: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2021_12.EngineeringDataLoad.SheetRow]) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2020_12.EngineeringDataLoad.UpdateEngineeringWorkbookResponse: ...

class EngineeringDataLoadService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> EngineeringDataLoadService: ...
    def UpdateEngineeringExcel(self, RoutineID: str, RoutineRev: str, FeatureRows: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2020_01.EngineeringDataLoad.Features]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def UpdateEngineeringWorkbook(self, RoutineID: str, RoutineRev: str, FeatureRows: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2020_01.EngineeringDataLoad.Features]) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2020_12.EngineeringDataLoad.UpdateEngineeringWorkbookResponse: ...
    def GetFNPFieldsSheetInfo(self, RoutineID: str, RoutineRev: str) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2021_12.EngineeringDataLoad.GetFNPFieldsSheetInfoResponse: ...
    def UpdateEngineeringWorkbook2(self, RoutineID: str, RoutineRev: str, FeatureRows: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2020_01.EngineeringDataLoad.Features], FeatureParamSheetData: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2021_12.EngineeringDataLoad.SheetRow]) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2020_12.EngineeringDataLoad.UpdateEngineeringWorkbookResponse: ...

class EngineeringDataQueryRestBindingStub(EngineeringDataQueryService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetMappedPortFeatureData(self, Request: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.EngineeringDataQuery.PortRoutineSetInfo]) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.EngineeringDataQuery.MappedPortFeatureResponse: ...

class EngineeringDataQueryService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> EngineeringDataQueryService: ...
    def GetMappedPortFeatureData(self, Request: list[Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.EngineeringDataQuery.PortRoutineSetInfo]) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.EngineeringDataQuery.MappedPortFeatureResponse: ...

class MeasurementDataLoadRestBindingStub(MeasurementDataLoadService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def PopulateDBLocatorTable(self, PlantId: str, DbKey: str) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def PopulateLinkLocatorTable(self, DbKey: str, DbName: str, TargetDbType: str, ServerName: str, UserName: str, Password: str) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class MeasurementDataLoadService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> MeasurementDataLoadService: ...
    def PopulateDBLocatorTable(self, PlantId: str, DbKey: str) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def PopulateLinkLocatorTable(self, DbKey: str, DbName: str, TargetDbType: str, ServerName: str, UserName: str, Password: str) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class MeasurementDataQueryRestBindingStub(MeasurementDataQueryService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetDatabaseKeysForPlants(self, Plantids: list[str]) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.MeasurementDataQuery.GetDatabaseKeysForPlantsResponse: ...
    def GetMeasurementDatabaseDetails(self) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.MeasurementDataQuery.MeasurementDatabaseDetailsResponse: ...
    def QueryDatabaseKeysList(self) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2018_11.MeasurementDataQuery.DatabaseKeysListResponse: ...

class MeasurementDataQueryService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> MeasurementDataQueryService: ...
    def GetDatabaseKeysForPlants(self, Plantids: list[str]) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.MeasurementDataQuery.GetDatabaseKeysForPlantsResponse: ...
    def GetMeasurementDatabaseDetails(self) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2017_11.MeasurementDataQuery.MeasurementDatabaseDetailsResponse: ...
    def QueryDatabaseKeysList(self) -> Teamcenter.Services.Internal.Strong.Productionmanagement._2018_11.MeasurementDataQuery.DatabaseKeysListResponse: ...

