import System
import Teamcenter.Services.Internal.Strong.Documentmanagement._2008_06.DispatcherManagement
import Teamcenter.Services.Internal.Strong.Documentmanagement._2008_06.DocumentControl
import Teamcenter.Services.Internal.Strong.Documentmanagement._2013_05.DigitalSignature
import Teamcenter.Services.Internal.Strong.Documentmanagement._2013_12.Markup
import Teamcenter.Services.Internal.Strong.Documentmanagement._2020_12.AttributeExchange
import Teamcenter.Services.Strong.Documentmanagement._2010_04.DigitalSignature
import Teamcenter.Soa.Client
import Teamcenter.Soa.Client.Model
import Teamcenter.Soa.Client.Model.Strong

class AttributeExchangeRestBindingStub(AttributeExchangeService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def ProcessAttrExchangeConfigurations(self, ProcessAttrExchConfInputInfo: Teamcenter.Services.Internal.Strong.Documentmanagement._2020_12.AttributeExchange.ProcessAttrExchangeConfigInput) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class AttributeExchangeService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> AttributeExchangeService: ...
    def ProcessAttrExchangeConfigurations(self, ProcessAttrExchConfInputInfo: Teamcenter.Services.Internal.Strong.Documentmanagement._2020_12.AttributeExchange.ProcessAttrExchangeConfigInput) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class DigitalSignatureRestBindingStub(DigitalSignatureService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def DigitalSigningSaveTool(self, SaveInput: Teamcenter.Services.Strong.Documentmanagement._2010_04.DigitalSignature.DigitalSignSaveInput) -> Teamcenter.Services.Strong.Documentmanagement._2010_04.DigitalSignature.DigtalSigningSaveResponse: ...
    def CancelSign(self, InputDatasets: list[Teamcenter.Soa.Client.Model.Strong.Dataset]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def IsCheckOutForSign(self, InputDatasets: list[Teamcenter.Soa.Client.Model.Strong.Dataset]) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2013_05.DigitalSignature.CheckOutForSignResponse: ...

class DigitalSignatureService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> DigitalSignatureService: ...
    def DigitalSigningSaveTool(self, SaveInput: Teamcenter.Services.Strong.Documentmanagement._2010_04.DigitalSignature.DigitalSignSaveInput) -> Teamcenter.Services.Strong.Documentmanagement._2010_04.DigitalSignature.DigtalSigningSaveResponse: ...
    def CancelSign(self, InputDatasets: list[Teamcenter.Soa.Client.Model.Strong.Dataset]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def IsCheckOutForSign(self, InputDatasets: list[Teamcenter.Soa.Client.Model.Strong.Dataset]) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2013_05.DigitalSignature.CheckOutForSignResponse: ...

class DispatcherManagementRestBindingStub(DispatcherManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetConfigurations(self, SvcConfigInput: list[Teamcenter.Services.Internal.Strong.Documentmanagement._2008_06.DispatcherManagement.ConfigInput]) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2008_06.DispatcherManagement.ConfigOutput: ...

class DispatcherManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> DispatcherManagementService: ...
    def GetConfigurations(self, SvcConfigInput: list[Teamcenter.Services.Internal.Strong.Documentmanagement._2008_06.DispatcherManagement.ConfigInput]) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2008_06.DispatcherManagement.ConfigOutput: ...

class DocumentControlRestBindingStub(DocumentControlService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetIRDCs(self, ItemRevs: list[Teamcenter.Soa.Client.Model.Strong.ItemRevision]) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2008_06.DocumentControl.IRDCResponse: ...

class DocumentControlService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> DocumentControlService: ...
    def GetIRDCs(self, ItemRevs: list[Teamcenter.Soa.Client.Model.Strong.ItemRevision]) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2008_06.DocumentControl.IRDCResponse: ...

class MarkupRestBindingStub(MarkupService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def LoadMarkups(self, BaseObject: Teamcenter.Soa.Client.Model.Strong.WorkspaceObject, Version: str, Message: str) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2013_12.Markup.MarkupResponse: ...
    def SaveMarkups(self, BaseObject: Teamcenter.Soa.Client.Model.Strong.WorkspaceObject, Version: str, Message: str, Markups: str) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2013_12.Markup.MarkupResponse: ...

class MarkupService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> MarkupService: ...
    def LoadMarkups(self, BaseObject: Teamcenter.Soa.Client.Model.Strong.WorkspaceObject, Version: str, Message: str) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2013_12.Markup.MarkupResponse: ...
    def SaveMarkups(self, BaseObject: Teamcenter.Soa.Client.Model.Strong.WorkspaceObject, Version: str, Message: str, Markups: str) -> Teamcenter.Services.Internal.Strong.Documentmanagement._2013_12.Markup.MarkupResponse: ...

