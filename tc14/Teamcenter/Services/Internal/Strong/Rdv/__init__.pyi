import System
import Teamcenter.Services.Internal.Strong.Rdv._2007_06.VariantManagement
import Teamcenter.Services.Internal.Strong.Rdv._2007_09.VariantManagement
import Teamcenter.Services.Internal.Strong.Rdv._2008_03.VariantManagement
import Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement
import Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement
import Teamcenter.Services.Internal.Strong.Rdv._2009_05.VariantManagement
import Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement
import Teamcenter.Soa.Client
import Teamcenter.Soa.Client.Model
import Teamcenter.Soa.Client.Model.Strong

class ContextManagementRestBindingStub(ContextManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def ApplyContextOnBOMWindow(self, BomWindow: Teamcenter.Soa.Client.Model.Strong.BOMWindow, StructureContext: Teamcenter.Soa.Client.Model.Strong.Fnd0StructureContext) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class ContextManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> ContextManagementService: ...
    def ApplyContextOnBOMWindow(self, BomWindow: Teamcenter.Soa.Client.Model.Strong.BOMWindow, StructureContext: Teamcenter.Soa.Client.Model.Strong.Fnd0StructureContext) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class VariantManagementRestBindingStub(VariantManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetVariabilityInfo(self, Inputs: list[Teamcenter.Soa.Client.Model.ModelObject]) -> Teamcenter.Services.Internal.Strong.Rdv._2007_06.VariantManagement.GetVariabilityInfoResponse: ...
    def GetVariantExprXOChartData(self, Inputs: list[Teamcenter.Soa.Client.Model.Strong.NamedVariantExpression]) -> Teamcenter.Services.Internal.Strong.Rdv._2007_09.VariantManagement.GetVariantExprAllDataResponse: ...
    def GetValidoverlayBomlinesInfo(self, Input: list[Teamcenter.Services.Internal.Strong.Rdv._2008_03.VariantManagement.BomlinesInfoForValidoverlay]) -> Teamcenter.Services.Internal.Strong.Rdv._2008_03.VariantManagement.GetValidoverlayBomlineResponse: ...
    def AddDesignToProduct(self, Component: Teamcenter.Soa.Client.Model.ModelObject, IaRev: Teamcenter.Soa.Client.Model.ModelObject, ProdRevs: list[Teamcenter.Soa.Client.Model.ModelObject], ArchApn: Teamcenter.Soa.Client.Model.ModelObject, Lous: list[Teamcenter.Soa.Client.Model.ModelObject], NoRequestedOccs: int, MetaExpr: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.NVEMetaToken], Validate: bool) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.AddDesignToProductResponse: ...
    def GetApnComponents(self, Inputs: Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetABandABEInputInfo) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetABandABEResponse: ...
    def GetArchbreakdownBomlineChildComponents(self, Inputs: Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetAbeChildComponentsInputInfo) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetAbeBomlineChildComponentsResponse: ...
    def GetArchbreakdownMeapnChildComponents(self, Inputs: Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetAbeChildComponentsInputInfo) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetAbeMeapnChildComponentsResponse: ...
    def ReplaceDesignInProduct(self, Component: Teamcenter.Soa.Client.Model.ModelObject, BomlinesToReplace: list[Teamcenter.Soa.Client.Model.ModelObject], ProdRevs: list[Teamcenter.Soa.Client.Model.ModelObject], ArchApn: Teamcenter.Soa.Client.Model.ModelObject, Lous: list[Teamcenter.Soa.Client.Model.ModelObject], MetaExpr: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.NVEMetaToken], Validate: bool) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def ValidateNVEMetaExpressions(self, MetaExprs: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.MetaExprTokens]) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.ValidateNVEMetaExprResponse: ...
    def ApplyNVEMetaExpression(self, Bomlines: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], MetaExpr: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.NVEMetaToken], Validate: bool) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def AskNVEMetaExpression(self, Bomlines: list[Teamcenter.Soa.Client.Model.Strong.BOMLine]) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.NVEMetaExpressionResponse: ...
    def ReapplyNVEMetaExpressions(self, Bomlines: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], Validate: bool) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def CreateMultipleNamedVariantExpressions(self, Input: Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.MultipleNamedVariantExpressions) -> Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.GetMultipleNVEResponse: ...
    def CreateSavedVariantRules(self, Input: Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.GetSVRInfo) -> Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.GetSVRResponse: ...
    def DeleteMultipleNamedVariantExpressions(self, Input: Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.DeleteNamedVariantExpressions) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def RealignNVEMetaExpressionTokens(self, MetaExprs: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.MetaExprTokens]) -> Teamcenter.Services.Internal.Strong.Rdv._2009_05.VariantManagement.NVEMetaExprTokensResponse: ...
    def ExecuteAdhocSearchWithOverlays(self, DatasetTag: Teamcenter.Soa.Client.Model.ModelObject, ProductRevTag: Teamcenter.Soa.Client.Model.ModelObject, BookMarkStringsToMatch: list[str], BomWindow: Teamcenter.Soa.Client.Model.Strong.BOMWindow, TargetBOMLine: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], VooFlag: bool, SvrTag: Teamcenter.Soa.Client.Model.ModelObject) -> Teamcenter.Services.Internal.Strong.Rdv._2009_05.VariantManagement.SearchResponse: ...
    def ExecuteSearchWithOverlays(self, BookMarkStringsToMatch: list[str], BomWindow: Teamcenter.Soa.Client.Model.Strong.BOMWindow, RevRule: Teamcenter.Soa.Client.Model.Strong.RevisionRule, TargetBOMLine: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], VooFlag: bool) -> Teamcenter.Services.Internal.Strong.Rdv._2009_05.VariantManagement.SearchResults: ...
    def GetValidBackgroundOverlays(self, AbortOnError: bool, Questions: list[Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.TargetOccurrences]) -> Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.BackgroundOccurrencesResponse: ...
    def AddPartToProduct(self, Inputs: list[Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.AddPartSolutionInputInfo]) -> Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.AddPartSolutionResponse: ...
    def ReplacePartInProduct(self, Inputs: list[Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.ReplacePartSolutionInputInfo]) -> Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.ReplacePartSolutionResponse: ...

class VariantManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> VariantManagementService: ...
    def GetVariabilityInfo(self, Inputs: list[Teamcenter.Soa.Client.Model.ModelObject]) -> Teamcenter.Services.Internal.Strong.Rdv._2007_06.VariantManagement.GetVariabilityInfoResponse: ...
    def GetVariantExprXOChartData(self, Inputs: list[Teamcenter.Soa.Client.Model.Strong.NamedVariantExpression]) -> Teamcenter.Services.Internal.Strong.Rdv._2007_09.VariantManagement.GetVariantExprAllDataResponse: ...
    def GetValidoverlayBomlinesInfo(self, Input: list[Teamcenter.Services.Internal.Strong.Rdv._2008_03.VariantManagement.BomlinesInfoForValidoverlay]) -> Teamcenter.Services.Internal.Strong.Rdv._2008_03.VariantManagement.GetValidoverlayBomlineResponse: ...
    def AddDesignToProduct(self, Component: Teamcenter.Soa.Client.Model.ModelObject, IaRev: Teamcenter.Soa.Client.Model.ModelObject, ProdRevs: list[Teamcenter.Soa.Client.Model.ModelObject], ArchApn: Teamcenter.Soa.Client.Model.ModelObject, Lous: list[Teamcenter.Soa.Client.Model.ModelObject], NoRequestedOccs: int, MetaExpr: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.NVEMetaToken], Validate: bool) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.AddDesignToProductResponse: ...
    def GetApnComponents(self, Inputs: Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetABandABEInputInfo) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetABandABEResponse: ...
    def GetArchbreakdownBomlineChildComponents(self, Inputs: Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetAbeChildComponentsInputInfo) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetAbeBomlineChildComponentsResponse: ...
    def GetArchbreakdownMeapnChildComponents(self, Inputs: Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetAbeChildComponentsInputInfo) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.GetAbeMeapnChildComponentsResponse: ...
    def ReplaceDesignInProduct(self, Component: Teamcenter.Soa.Client.Model.ModelObject, BomlinesToReplace: list[Teamcenter.Soa.Client.Model.ModelObject], ProdRevs: list[Teamcenter.Soa.Client.Model.ModelObject], ArchApn: Teamcenter.Soa.Client.Model.ModelObject, Lous: list[Teamcenter.Soa.Client.Model.ModelObject], MetaExpr: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.NVEMetaToken], Validate: bool) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def ValidateNVEMetaExpressions(self, MetaExprs: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.MetaExprTokens]) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.ValidateNVEMetaExprResponse: ...
    def ApplyNVEMetaExpression(self, Bomlines: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], MetaExpr: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.NVEMetaToken], Validate: bool) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def AskNVEMetaExpression(self, Bomlines: list[Teamcenter.Soa.Client.Model.Strong.BOMLine]) -> Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.NVEMetaExpressionResponse: ...
    def ReapplyNVEMetaExpressions(self, Bomlines: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], Validate: bool) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def CreateMultipleNamedVariantExpressions(self, Input: Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.MultipleNamedVariantExpressions) -> Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.GetMultipleNVEResponse: ...
    def CreateSavedVariantRules(self, Input: Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.GetSVRInfo) -> Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.GetSVRResponse: ...
    def DeleteMultipleNamedVariantExpressions(self, Input: Teamcenter.Services.Internal.Strong.Rdv._2009_04.VariantManagement.DeleteNamedVariantExpressions) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def RealignNVEMetaExpressionTokens(self, MetaExprs: list[Teamcenter.Services.Internal.Strong.Rdv._2009_01.VariantManagement.MetaExprTokens]) -> Teamcenter.Services.Internal.Strong.Rdv._2009_05.VariantManagement.NVEMetaExprTokensResponse: ...
    def ExecuteAdhocSearchWithOverlays(self, DatasetTag: Teamcenter.Soa.Client.Model.ModelObject, ProductRevTag: Teamcenter.Soa.Client.Model.ModelObject, BookMarkStringsToMatch: list[str], BomWindow: Teamcenter.Soa.Client.Model.Strong.BOMWindow, TargetBOMLine: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], VooFlag: bool, SvrTag: Teamcenter.Soa.Client.Model.ModelObject) -> Teamcenter.Services.Internal.Strong.Rdv._2009_05.VariantManagement.SearchResponse: ...
    def ExecuteSearchWithOverlays(self, BookMarkStringsToMatch: list[str], BomWindow: Teamcenter.Soa.Client.Model.Strong.BOMWindow, RevRule: Teamcenter.Soa.Client.Model.Strong.RevisionRule, TargetBOMLine: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], VooFlag: bool) -> Teamcenter.Services.Internal.Strong.Rdv._2009_05.VariantManagement.SearchResults: ...
    def GetValidBackgroundOverlays(self, AbortOnError: bool, Questions: list[Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.TargetOccurrences]) -> Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.BackgroundOccurrencesResponse: ...
    def AddPartToProduct(self, Inputs: list[Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.AddPartSolutionInputInfo]) -> Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.AddPartSolutionResponse: ...
    def ReplacePartInProduct(self, Inputs: list[Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.ReplacePartSolutionInputInfo]) -> Teamcenter.Services.Internal.Strong.Rdv._2010_04.VariantManagement.ReplacePartSolutionResponse: ...

