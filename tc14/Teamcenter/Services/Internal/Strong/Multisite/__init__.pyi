import System
import System.Collections
import Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore
import Teamcenter.Services.Internal.Strong.Multisite._2018_06.Search
import Teamcenter.Services.Internal.Strong.Multisite._2020_12.ImportExportTCXML
import Teamcenter.Soa.Client
import Teamcenter.Soa.Client.Model
import Teamcenter.Soa.Client.Model.Strong

class ArchiveRestoreRestBindingStub(ArchiveRestoreService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def ArchiveObjects(self, Objects: list[Teamcenter.Soa.Client.Model.ModelObject], ExcludeObjects: list[Teamcenter.Soa.Client.Model.ModelObject], SessionOptionsAndValues: list[Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.NamesAndValues]) -> Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.ArchiveRestoreResponse: ...
    def GetReportFileTicket(self, ReportFileName: str) -> Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.GetReportTicketResponse: ...
    def RestoreObjects(self, Objects: list[Teamcenter.Soa.Client.Model.Strong.PublishedObject], SessionOptionsAndValues: list[Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.NamesAndValues]) -> Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.ArchiveRestoreResponse: ...

class ArchiveRestoreService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> ArchiveRestoreService: ...
    def ArchiveObjects(self, Objects: list[Teamcenter.Soa.Client.Model.ModelObject], ExcludeObjects: list[Teamcenter.Soa.Client.Model.ModelObject], SessionOptionsAndValues: list[Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.NamesAndValues]) -> Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.ArchiveRestoreResponse: ...
    def GetReportFileTicket(self, ReportFileName: str) -> Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.GetReportTicketResponse: ...
    def RestoreObjects(self, Objects: list[Teamcenter.Soa.Client.Model.Strong.PublishedObject], SessionOptionsAndValues: list[Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.NamesAndValues]) -> Teamcenter.Services.Internal.Strong.Multisite._2017_11.ArchiveRestore.ArchiveRestoreResponse: ...

class ImportExportTCXMLRestBindingStub(ImportExportTCXMLService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetMultisiteDashBoardData(self, SessionOptions: System.Collections.Hashtable, ReportRecipe: list[Teamcenter.Services.Internal.Strong.Multisite._2020_12.ImportExportTCXML.ReportRecipe]) -> Teamcenter.Services.Internal.Strong.Multisite._2020_12.ImportExportTCXML.MultisiteDashboardResponse: ...

class ImportExportTCXMLService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> ImportExportTCXMLService: ...
    def GetMultisiteDashBoardData(self, SessionOptions: System.Collections.Hashtable, ReportRecipe: list[Teamcenter.Services.Internal.Strong.Multisite._2020_12.ImportExportTCXML.ReportRecipe]) -> Teamcenter.Services.Internal.Strong.Multisite._2020_12.ImportExportTCXML.MultisiteDashboardResponse: ...

class SearchRestBindingStub(SearchService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def FetchOdsRecords(self, OdsSiteName: str, SearchMode: int, StartDate: str, EndDate: str, PubrList: list[str], OdsSessionInfo: System.Collections.Hashtable) -> Teamcenter.Services.Internal.Strong.Multisite._2018_06.Search.FetchOdsResponse: ...

class SearchService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> SearchService: ...
    def FetchOdsRecords(self, OdsSiteName: str, SearchMode: int, StartDate: str, EndDate: str, PubrList: list[str], OdsSessionInfo: System.Collections.Hashtable) -> Teamcenter.Services.Internal.Strong.Multisite._2018_06.Search.FetchOdsResponse: ...

