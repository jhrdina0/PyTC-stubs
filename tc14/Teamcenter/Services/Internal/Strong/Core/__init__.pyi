import System
import Teamcenter.Schemas.Soa._2006_03.Base
import Teamcenter.Services.Internal.Strong.Core._2007_01.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity
import Teamcenter.Services.Internal.Strong.Core._2007_09.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2008_06.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement
import Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement
import Teamcenter.Services.Internal.Strong.Core._2009_10.Thumbnail
import Teamcenter.Services.Internal.Strong.Core._2010_04.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2010_04.ProjectLevelSecurity
import Teamcenter.Services.Internal.Strong.Core._2010_04.StructureManagement
import Teamcenter.Services.Internal.Strong.Core._2010_09.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2010_09.FileManagement
import Teamcenter.Services.Internal.Strong.Core._2011_06.ICT
import Teamcenter.Services.Internal.Strong.Core._2012_02.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2012_09.Envelope
import Teamcenter.Services.Internal.Strong.Core._2012_10.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2013_05.Licensing
import Teamcenter.Services.Internal.Strong.Core._2013_05.PresentationManagement
import Teamcenter.Services.Internal.Strong.Core._2013_05.ProjectLevelSecurity
import Teamcenter.Services.Internal.Strong.Core._2013_05.Thumbnail
import Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement
import Teamcenter.Services.Internal.Strong.Core._2014_10.Licensing
import Teamcenter.Services.Internal.Strong.Core._2016_10.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2017_05.FileManagement
import Teamcenter.Services.Internal.Strong.Core._2017_05.PresentationManagement
import Teamcenter.Services.Internal.Strong.Core._2017_11.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject
import Teamcenter.Services.Internal.Strong.Core._2017_11.Type
import Teamcenter.Services.Internal.Strong.Core._2018_06.LogicalObject
import Teamcenter.Services.Internal.Strong.Core._2018_11.FileManagement
import Teamcenter.Services.Internal.Strong.Core._2018_11.LogicalObject
import Teamcenter.Services.Internal.Strong.Core._2018_12.Licensing
import Teamcenter.Services.Internal.Strong.Core._2020_01.ActiveModeler
import Teamcenter.Services.Internal.Strong.Core._2020_04.LogicalObject
import Teamcenter.Services.Internal.Strong.Core._2021_06.DataManagement
import Teamcenter.Services.Internal.Strong.Core._2021_12.DataManagement
import Teamcenter.Services.Strong.Core._2006_03.FileManagement
import Teamcenter.Services.Strong.Core._2007_01.FileManagement
import Teamcenter.Services.Strong.Core._2008_06.DataManagement
import Teamcenter.Services.Strong.Core._2011_06.DataManagement
import Teamcenter.Services.Strong.Core._2012_09.DataManagement
import Teamcenter.Services.Strong.Core._2013_05.DataManagement
import Teamcenter.Soa.Client
import Teamcenter.Soa.Client.Model
import Teamcenter.Soa.Client.Model.Strong

class ActiveModelerRestBindingStub(ActiveModelerService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def AddPropertiesOnTypes(self, AddPropsOnTypeInputs: list[Teamcenter.Services.Internal.Strong.Core._2020_01.ActiveModeler.AddPropsOnTypeInput]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def CreateTypes(self, TypeInput: list[Teamcenter.Services.Internal.Strong.Core._2020_01.ActiveModeler.TypeInput]) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class ActiveModelerService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> ActiveModelerService: ...
    def AddPropertiesOnTypes(self, AddPropsOnTypeInputs: list[Teamcenter.Services.Internal.Strong.Core._2020_01.ActiveModeler.AddPropsOnTypeInput]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def CreateTypes(self, TypeInput: list[Teamcenter.Services.Internal.Strong.Core._2020_01.ActiveModeler.TypeInput]) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class DataManagementRestBindingStub(DataManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetAttributeValues(self, ClassAttributeValues: list[Teamcenter.Services.Internal.Strong.Core._2007_01.DataManagement.GetAttributeValuesInputData]) -> Teamcenter.Services.Internal.Strong.Core._2007_01.DataManagement.GetAttributeValuesResponse: ...
    def GetOrganizationInformation(self, Options: list[Teamcenter.Services.Internal.Strong.Core._2007_01.DataManagement.GetOrganizationInformationInputData]) -> Teamcenter.Services.Internal.Strong.Core._2007_01.DataManagement.GetOrganizationInformationResponse: ...
    def WhereUsedOccGroup(self, Objects: list[Teamcenter.Soa.Client.Model.ModelObject], NumLevels: int, WhereUsedPrecise: bool, Rule: Teamcenter.Soa.Client.Model.ModelObject) -> Teamcenter.Services.Internal.Strong.Core._2007_09.DataManagement.WhereUsedResponseOccGroup: ...
    def ReviseObject(self, Info: list[Teamcenter.Services.Strong.Core._2008_06.DataManagement.ReviseInfo], DeepCopyRequired: bool) -> Teamcenter.Services.Strong.Core._2008_06.DataManagement.ReviseResponse2: ...
    def SaveAsNewItemObject(self, Info: list[Teamcenter.Services.Strong.Core._2008_06.DataManagement.SaveAsNewItemInfo], DeepCopyRequired: bool) -> Teamcenter.Services.Strong.Core._2008_06.DataManagement.SaveAsNewItemResponse2: ...
    def CreateCachedRelations(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DataManagement.Relationship]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DataManagement.CreateRelationsResponse: ...
    def MultiRelationMultiLevelExpand(self, Input: Teamcenter.Services.Internal.Strong.Core._2008_06.DataManagement.MultiRelMultiLevelExpandInput) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DataManagement.MultiRelationMultiLevelExpandResponse: ...
    def SetDefaultProjectForProjectMembers(self, Project: Teamcenter.Soa.Client.Model.ModelObject, ProjectMembers: list[Teamcenter.Soa.Client.Model.ModelObject]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def GetSubscribableTypesAndSubTypes(self, ChildTypeOption: str) -> Teamcenter.Services.Internal.Strong.Core._2010_04.DataManagement.GetSubscribableTypesAndSubtypesResponse: ...
    def GetDatasetFiles(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2010_09.DataManagement.DatasetFileQueryInfo], RetrieveFiles: bool) -> Teamcenter.Services.Internal.Strong.Core._2010_09.DataManagement.DatasetFilesResponse: ...
    def GetViewableData(self, Input: list[Teamcenter.Soa.Client.Model.ModelObject], ConfiguredViewerIDs: list[str], ViewerConfigKey: str) -> Teamcenter.Services.Internal.Strong.Core._2012_02.DataManagement.GetViewableDataResponse: ...
    def CreateRelateAndSubmitObjects(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2012_10.DataManagement.CreateIn2]) -> Teamcenter.Services.Internal.Strong.Core._2012_10.DataManagement.CreateResponse2: ...
    def ReviseObjectsInBulk(self, ReviseData: list[Teamcenter.Services.Internal.Strong.Core._2016_10.DataManagement.ReviseIn]) -> Teamcenter.Services.Strong.Core._2013_05.DataManagement.ReviseObjectsResponse: ...
    def SaveAsObjectsInBulkAndRelate(self, SaveAsData: list[Teamcenter.Services.Internal.Strong.Core._2016_10.DataManagement.SaveAsIn], RelationInfo: list[Teamcenter.Services.Strong.Core._2012_09.DataManagement.RelateInfoIn]) -> Teamcenter.Services.Strong.Core._2011_06.DataManagement.SaveAsObjectsResponse: ...
    def GetTCSessionAnalyticsInfo(self, ExtraInfoIn: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2017_11.DataManagement.TCSessionAndAnalyticsInfo: ...
    def GenerateDatasetName(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2021_06.DataManagement.GenerateDsNameInput]) -> Teamcenter.Services.Internal.Strong.Core._2021_06.DataManagement.GenerateDatasetNameResponse: ...
    def QueryForFileExistence(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2021_12.DataManagement.DatasetsForFileInput]) -> Teamcenter.Services.Internal.Strong.Core._2021_12.DataManagement.DatasetsForFileResponse: ...

class DataManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> DataManagementService: ...
    def GetAttributeValues(self, ClassAttributeValues: list[Teamcenter.Services.Internal.Strong.Core._2007_01.DataManagement.GetAttributeValuesInputData]) -> Teamcenter.Services.Internal.Strong.Core._2007_01.DataManagement.GetAttributeValuesResponse: ...
    def GetOrganizationInformation(self, Options: list[Teamcenter.Services.Internal.Strong.Core._2007_01.DataManagement.GetOrganizationInformationInputData]) -> Teamcenter.Services.Internal.Strong.Core._2007_01.DataManagement.GetOrganizationInformationResponse: ...
    def WhereUsedOccGroup(self, Objects: list[Teamcenter.Soa.Client.Model.ModelObject], NumLevels: int, WhereUsedPrecise: bool, Rule: Teamcenter.Soa.Client.Model.ModelObject) -> Teamcenter.Services.Internal.Strong.Core._2007_09.DataManagement.WhereUsedResponseOccGroup: ...
    def ReviseObject(self, Info: list[Teamcenter.Services.Strong.Core._2008_06.DataManagement.ReviseInfo], DeepCopyRequired: bool) -> Teamcenter.Services.Strong.Core._2008_06.DataManagement.ReviseResponse2: ...
    def SaveAsNewItemObject(self, Info: list[Teamcenter.Services.Strong.Core._2008_06.DataManagement.SaveAsNewItemInfo], DeepCopyRequired: bool) -> Teamcenter.Services.Strong.Core._2008_06.DataManagement.SaveAsNewItemResponse2: ...
    def CreateCachedRelations(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DataManagement.Relationship]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DataManagement.CreateRelationsResponse: ...
    def MultiRelationMultiLevelExpand(self, Input: Teamcenter.Services.Internal.Strong.Core._2008_06.DataManagement.MultiRelMultiLevelExpandInput) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DataManagement.MultiRelationMultiLevelExpandResponse: ...
    def SetDefaultProjectForProjectMembers(self, Project: Teamcenter.Soa.Client.Model.ModelObject, ProjectMembers: list[Teamcenter.Soa.Client.Model.ModelObject]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def GetSubscribableTypesAndSubTypes(self, ChildTypeOption: str) -> Teamcenter.Services.Internal.Strong.Core._2010_04.DataManagement.GetSubscribableTypesAndSubtypesResponse: ...
    def GetDatasetFiles(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2010_09.DataManagement.DatasetFileQueryInfo], RetrieveFiles: bool) -> Teamcenter.Services.Internal.Strong.Core._2010_09.DataManagement.DatasetFilesResponse: ...
    def GetViewableData(self, Input: list[Teamcenter.Soa.Client.Model.ModelObject], ConfiguredViewerIDs: list[str], ViewerConfigKey: str) -> Teamcenter.Services.Internal.Strong.Core._2012_02.DataManagement.GetViewableDataResponse: ...
    def CreateRelateAndSubmitObjects(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2012_10.DataManagement.CreateIn2]) -> Teamcenter.Services.Internal.Strong.Core._2012_10.DataManagement.CreateResponse2: ...
    def ReviseObjectsInBulk(self, ReviseData: list[Teamcenter.Services.Internal.Strong.Core._2016_10.DataManagement.ReviseIn]) -> Teamcenter.Services.Strong.Core._2013_05.DataManagement.ReviseObjectsResponse: ...
    def SaveAsObjectsInBulkAndRelate(self, SaveAsData: list[Teamcenter.Services.Internal.Strong.Core._2016_10.DataManagement.SaveAsIn], RelationInfo: list[Teamcenter.Services.Strong.Core._2012_09.DataManagement.RelateInfoIn]) -> Teamcenter.Services.Strong.Core._2011_06.DataManagement.SaveAsObjectsResponse: ...
    def GetTCSessionAnalyticsInfo(self, ExtraInfoIn: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2017_11.DataManagement.TCSessionAndAnalyticsInfo: ...
    def GenerateDatasetName(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2021_06.DataManagement.GenerateDsNameInput]) -> Teamcenter.Services.Internal.Strong.Core._2021_06.DataManagement.GenerateDatasetNameResponse: ...
    def QueryForFileExistence(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2021_12.DataManagement.DatasetsForFileInput]) -> Teamcenter.Services.Internal.Strong.Core._2021_12.DataManagement.DatasetsForFileResponse: ...

class DispatcherManagementRestBindingStub(DispatcherManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def CreateDatasetOfVersion(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.CreateDatasetOfVersionArgs]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.CreateDatasetOfVersionResponse: ...
    def InsertDatasetVersion(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.InsertDatasetVersionArgs]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.InsertDatasetVersionResponse: ...
    def QueryDispatcherRequests(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.QueryDispatcherRequestsArgs]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.QueryDispatcherRequestsResponse: ...
    def UpdateDispatcherRequests(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.UpdateDispatcherRequestArgs]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.UpdateDispatcherRequestResponse: ...

class DispatcherManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> DispatcherManagementService: ...
    def CreateDatasetOfVersion(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.CreateDatasetOfVersionArgs]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.CreateDatasetOfVersionResponse: ...
    def InsertDatasetVersion(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.InsertDatasetVersionArgs]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.InsertDatasetVersionResponse: ...
    def QueryDispatcherRequests(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.QueryDispatcherRequestsArgs]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.QueryDispatcherRequestsResponse: ...
    def UpdateDispatcherRequests(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.UpdateDispatcherRequestArgs]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.DispatcherManagement.UpdateDispatcherRequestResponse: ...

class EnvelopeRestBindingStub(EnvelopeService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def SendEmail(self, Emailinfos: list[Teamcenter.Services.Internal.Strong.Core._2012_09.Envelope.EmailInfo]) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class EnvelopeService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> EnvelopeService: ...
    def SendEmail(self, Emailinfos: list[Teamcenter.Services.Internal.Strong.Core._2012_09.Envelope.EmailInfo]) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class ICTRestBindingStub(ICTService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def InvokeICTMethod(self, ClassName: str, MethodName: str, Args: list[Teamcenter.Services.Internal.Strong.Core._2011_06.ICT.Arg]) -> Teamcenter.Services.Internal.Strong.Core._2011_06.ICT.InvokeICTMethodResponse: ...

class ICTService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> ICTService: ...
    def InvokeICTMethod(self, ClassName: str, MethodName: str, Args: list[Teamcenter.Services.Internal.Strong.Core._2011_06.ICT.Arg]) -> Teamcenter.Services.Internal.Strong.Core._2011_06.ICT.InvokeICTMethodResponse: ...

class LicensingRestBindingStub(LicensingService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetLicenseBundles(self, LicenseServerNames: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2013_05.Licensing.GetLicenseBundlesResponse: ...
    def UpdateLicenseServer(self, InputObjects: list[Teamcenter.Services.Internal.Strong.Core._2014_10.Licensing.LicenseServerInput]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def UpdateLicenseServer2(self, InputObjects: list[Teamcenter.Services.Internal.Strong.Core._2018_12.Licensing.LicenseServerInput2]) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class LicensingService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> LicensingService: ...
    def GetLicenseBundles(self, LicenseServerNames: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2013_05.Licensing.GetLicenseBundlesResponse: ...
    def UpdateLicenseServer(self, InputObjects: list[Teamcenter.Services.Internal.Strong.Core._2014_10.Licensing.LicenseServerInput]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def UpdateLicenseServer2(self, InputObjects: list[Teamcenter.Services.Internal.Strong.Core._2018_12.Licensing.LicenseServerInput2]) -> Teamcenter.Soa.Client.Model.ServiceData: ...

class LogicalObjectRestBindingStub(LogicalObjectService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def AddMembersAndPresentedProps(self, AddMembersAndPresentedProps: Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.AddMembersPresentedPropsInput) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.AddMemberAndPresentedPropsResponse: ...
    def CreateLogicalObjectTypes(self, LogicalObjectTypeInputs: list[Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.LogicalObjectTypeInput]) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.LogicalObjectTypeResponse: ...
    def DeleteLogicalObjectTypes(self, LogicalObjects: list[Teamcenter.Soa.Client.Model.ModelObject]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def DeleteMembersAndPresentedProps(self, DeleteMembersAndPresentedProps: list[Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.DeleteMembersPresentedPropsInput]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def AddMembersAndPresentedProps2(self, AddMembersAndPresentedProps: Teamcenter.Services.Internal.Strong.Core._2018_06.LogicalObject.AddMembersPresentedPropsInput2) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.AddMemberAndPresentedPropsResponse: ...
    def CreateLogicalObjectTypes2(self, LogicalObjectTypeInputs: list[Teamcenter.Services.Internal.Strong.Core._2018_06.LogicalObject.LogicalObjectTypeInput2]) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.LogicalObjectTypeResponse: ...
    def UpdateMembers(self, UpdateMemberInputStruct: Teamcenter.Services.Internal.Strong.Core._2018_06.LogicalObject.UpdateMemberInput) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def AddIncludedLogicalObjects(self, AddIncludedLOInput: Teamcenter.Services.Internal.Strong.Core._2018_11.LogicalObject.AddIncludedLOInput) -> Teamcenter.Services.Internal.Strong.Core._2018_11.LogicalObject.AddIncludedLogicalObjectsResponse: ...
    def AddMemAndPresentedPropsWithWrite(self, AddMembersAndPresentedProps: Teamcenter.Services.Internal.Strong.Core._2020_04.LogicalObject.AddMemAndPresentedPropsWriteInput) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.AddMemberAndPresentedPropsResponse: ...

class LogicalObjectService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> LogicalObjectService: ...
    def AddMembersAndPresentedProps(self, AddMembersAndPresentedProps: Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.AddMembersPresentedPropsInput) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.AddMemberAndPresentedPropsResponse: ...
    def CreateLogicalObjectTypes(self, LogicalObjectTypeInputs: list[Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.LogicalObjectTypeInput]) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.LogicalObjectTypeResponse: ...
    def DeleteLogicalObjectTypes(self, LogicalObjects: list[Teamcenter.Soa.Client.Model.ModelObject]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def DeleteMembersAndPresentedProps(self, DeleteMembersAndPresentedProps: list[Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.DeleteMembersPresentedPropsInput]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def AddMembersAndPresentedProps2(self, AddMembersAndPresentedProps: Teamcenter.Services.Internal.Strong.Core._2018_06.LogicalObject.AddMembersPresentedPropsInput2) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.AddMemberAndPresentedPropsResponse: ...
    def CreateLogicalObjectTypes2(self, LogicalObjectTypeInputs: list[Teamcenter.Services.Internal.Strong.Core._2018_06.LogicalObject.LogicalObjectTypeInput2]) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.LogicalObjectTypeResponse: ...
    def UpdateMembers(self, UpdateMemberInputStruct: Teamcenter.Services.Internal.Strong.Core._2018_06.LogicalObject.UpdateMemberInput) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def AddIncludedLogicalObjects(self, AddIncludedLOInput: Teamcenter.Services.Internal.Strong.Core._2018_11.LogicalObject.AddIncludedLOInput) -> Teamcenter.Services.Internal.Strong.Core._2018_11.LogicalObject.AddIncludedLogicalObjectsResponse: ...
    def AddMemAndPresentedPropsWithWrite(self, AddMembersAndPresentedProps: Teamcenter.Services.Internal.Strong.Core._2020_04.LogicalObject.AddMemAndPresentedPropsWriteInput) -> Teamcenter.Services.Internal.Strong.Core._2017_11.LogicalObject.AddMemberAndPresentedPropsResponse: ...

class PresentationManagementRestBindingStub(PresentationManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetSharedCommonClientFiles(self, PrefNames: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2013_05.PresentationManagement.GetSharedCommonClientFilesResponse: ...
    def GetStylesheet(self, Pref: Teamcenter.Services.Internal.Strong.Core._2013_05.PresentationManagement.GetStylesheetPref, InputData: list[Teamcenter.Services.Internal.Strong.Core._2013_05.PresentationManagement.StylesheetInputData]) -> Teamcenter.Services.Internal.Strong.Core._2013_05.PresentationManagement.GetStylesheetResponse: ...
    def GetStylesheetPerPage(self, Pref: Teamcenter.Services.Internal.Strong.Core._2017_05.PresentationManagement.GetStylesheetPerPagePref, InputData: list[Teamcenter.Services.Internal.Strong.Core._2017_05.PresentationManagement.StylesheetPerPageInputData]) -> Teamcenter.Services.Internal.Strong.Core._2017_05.PresentationManagement.GetStylesheetPerPageResponse: ...

class PresentationManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> PresentationManagementService: ...
    def GetSharedCommonClientFiles(self, PrefNames: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2013_05.PresentationManagement.GetSharedCommonClientFilesResponse: ...
    def GetStylesheet(self, Pref: Teamcenter.Services.Internal.Strong.Core._2013_05.PresentationManagement.GetStylesheetPref, InputData: list[Teamcenter.Services.Internal.Strong.Core._2013_05.PresentationManagement.StylesheetInputData]) -> Teamcenter.Services.Internal.Strong.Core._2013_05.PresentationManagement.GetStylesheetResponse: ...
    def GetStylesheetPerPage(self, Pref: Teamcenter.Services.Internal.Strong.Core._2017_05.PresentationManagement.GetStylesheetPerPagePref, InputData: list[Teamcenter.Services.Internal.Strong.Core._2017_05.PresentationManagement.StylesheetPerPageInputData]) -> Teamcenter.Services.Internal.Strong.Core._2017_05.PresentationManagement.GetStylesheetPerPageResponse: ...

class ProjectLevelSecurityRestBindingStub(ProjectLevelSecurityService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetFilteredProjectData(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.GetFilteredProjectDataInputData]) -> Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.GetFilteredProjectDataResponse: ...
    def GetProjectsSmartFolderHierarchy(self, ProjectIDs: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.ProjectSmartFolderHierarchyOutputResponse: ...
    def GetTopLevelSmartFolderHierarchy(self) -> Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.TopLevelHierarchyOutputResponse: ...
    def GetProjectsSmartFolderHierarchy2(self, ProjectIDs: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2010_04.ProjectLevelSecurity.ProjectSmartFolderHierarchyOutputResponse2: ...
    def GetFilteredObjectsInProject(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.GetFilteredProjectDataInputData]) -> Teamcenter.Services.Internal.Strong.Core._2013_05.ProjectLevelSecurity.GetFilteredProjectObjectsResponse: ...

class ProjectLevelSecurityService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> ProjectLevelSecurityService: ...
    def GetFilteredProjectData(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.GetFilteredProjectDataInputData]) -> Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.GetFilteredProjectDataResponse: ...
    def GetProjectsSmartFolderHierarchy(self, ProjectIDs: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.ProjectSmartFolderHierarchyOutputResponse: ...
    def GetTopLevelSmartFolderHierarchy(self) -> Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.TopLevelHierarchyOutputResponse: ...
    def GetProjectsSmartFolderHierarchy2(self, ProjectIDs: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2010_04.ProjectLevelSecurity.ProjectSmartFolderHierarchyOutputResponse2: ...
    def GetFilteredObjectsInProject(self, Input: list[Teamcenter.Services.Internal.Strong.Core._2007_06.ProjectLevelSecurity.GetFilteredProjectDataInputData]) -> Teamcenter.Services.Internal.Strong.Core._2013_05.ProjectLevelSecurity.GetFilteredProjectObjectsResponse: ...

class StructureManagementRestBindingStub(StructureManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def ValidateInStructureAssociations(self, AssociationType: str, Bomlines: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], NumLevels: int) -> Teamcenter.Services.Internal.Strong.Core._2010_04.StructureManagement.ValidateInStructureAssociationsResponse: ...

class StructureManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> StructureManagementService: ...
    def ValidateInStructureAssociations(self, AssociationType: str, Bomlines: list[Teamcenter.Soa.Client.Model.Strong.BOMLine], NumLevels: int) -> Teamcenter.Services.Internal.Strong.Core._2010_04.StructureManagement.ValidateInStructureAssociationsResponse: ...

class ThumbnailRestBindingStub(ThumbnailService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetThumbnailFileTickets(self, BusinessObjects: list[Teamcenter.Soa.Client.Model.ModelObject], SearchOrders: Teamcenter.Services.Internal.Strong.Core._2009_10.Thumbnail.SearchOrders) -> Teamcenter.Services.Internal.Strong.Core._2009_10.Thumbnail.ThumbnailFileTicketsResponse: ...
    def UpdateThumbnail(self, BusinessObject: list[Teamcenter.Soa.Client.Model.ModelObject], UpdateThumbnailInputs: list[Teamcenter.Services.Internal.Strong.Core._2009_10.Thumbnail.UpdateThumbnailInputs]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def GetThumbnailFileTickets2(self, BusinessObjects: list[Teamcenter.Soa.Client.Model.ModelObject], SearchOrders: Teamcenter.Services.Internal.Strong.Core._2009_10.Thumbnail.SearchOrders) -> Teamcenter.Services.Internal.Strong.Core._2013_05.Thumbnail.ThumbnailFileTicketsResponse2: ...

class ThumbnailService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> ThumbnailService: ...
    def GetThumbnailFileTickets(self, BusinessObjects: list[Teamcenter.Soa.Client.Model.ModelObject], SearchOrders: Teamcenter.Services.Internal.Strong.Core._2009_10.Thumbnail.SearchOrders) -> Teamcenter.Services.Internal.Strong.Core._2009_10.Thumbnail.ThumbnailFileTicketsResponse: ...
    def UpdateThumbnail(self, BusinessObject: list[Teamcenter.Soa.Client.Model.ModelObject], UpdateThumbnailInputs: list[Teamcenter.Services.Internal.Strong.Core._2009_10.Thumbnail.UpdateThumbnailInputs]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def GetThumbnailFileTickets2(self, BusinessObjects: list[Teamcenter.Soa.Client.Model.ModelObject], SearchOrders: Teamcenter.Services.Internal.Strong.Core._2009_10.Thumbnail.SearchOrders) -> Teamcenter.Services.Internal.Strong.Core._2013_05.Thumbnail.ThumbnailFileTicketsResponse2: ...

class TypeRestBindingStub(TypeService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def GetSubTypeHierarchicalTrees(self, GivenTypes: list[Teamcenter.Services.Internal.Strong.Core._2017_11.Type.GetSubTypeHierarchicalTreeInput]) -> Teamcenter.Services.Internal.Strong.Core._2017_11.Type.GetSubTypeHierarchicalTreeResponse: ...

class TypeService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> TypeService: ...
    def GetSubTypeHierarchicalTrees(self, GivenTypes: list[Teamcenter.Services.Internal.Strong.Core._2017_11.Type.GetSubTypeHierarchicalTreeInput]) -> Teamcenter.Services.Internal.Strong.Core._2017_11.Type.GetSubTypeHierarchicalTreeResponse: ...

class FileManagementRestBindingStub(FileManagementService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def CommitRegularFiles(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.CommitUploadedRegularFilesInput]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.CommitUploadedRegularFilesResponse: ...
    def GetRegularFileTicketsForUpload(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.GetRegularFileWriteTicketsInput]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.GetRegularFileWriteTicketsResponse: ...
    def GetWriteTickets(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.WriteTicketsInput]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.FileTicketsResponse: ...
    def UpdateImanFileCommits(self, CleanupInfo: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.UpdateImanFileCommitsResponse: ...
    def GetFileTransferTickets(self, ImanFiles: list[Teamcenter.Soa.Client.Model.Strong.ImanFile]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.GetFileTransferTicketsResponse: ...
    def CommitReplacedFiles(self, CommitInfos: list[Teamcenter.Services.Internal.Strong.Core._2010_09.FileManagement.CommitReplacedFileInfo], Flags: list[bool]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def GetPlmdFileTicketForDownload(self, Infos: list[Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.DatashareManagerDownloadInfo]) -> Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.GetPlmdFileTicketResponse: ...
    def GetPlmdFileTicketForUpload(self, Infos: list[Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.DatashareManagerUploadInfo]) -> Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.GetPlmdFileTicketResponse: ...
    def PostCleanUpFileCommits(self, Files: list[Teamcenter.Soa.Client.Model.Strong.ImanFile]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def GetPlmdFileTicketForReplace(self, Infos: list[Teamcenter.Services.Internal.Strong.Core._2017_05.FileManagement.DatashareManagerReplaceInfo]) -> Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.GetPlmdFileTicketResponse: ...
    def GetTransientFileTicketsForDownload(self, Tickets: list[Teamcenter.Services.Internal.Strong.Core._2018_11.FileManagement.GetTransientTicketsDownloadInput]) -> Teamcenter.Services.Internal.Strong.Core._2018_11.FileManagement.GetTransientTicketsDownloadResponse: ...
    def GetDatasetTicketsForChunkedUpload(self, Inputs: list[Teamcenter.Services.Strong.Core._2006_03.FileManagement.GetDatasetWriteTicketsInputData]) -> Teamcenter.Services.Strong.Core._2006_03.FileManagement.GetDatasetWriteTicketsResponse: ...
    def GetTransientTicketsForChunkedUpload(self, TransientFileInfos: list[Teamcenter.Services.Strong.Core._2007_01.FileManagement.TransientFileInfo]) -> Teamcenter.Services.Strong.Core._2007_01.FileManagement.GetTransientFileTicketsResponse: ...

class FileManagementService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> FileManagementService: ...
    def CommitRegularFiles(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.CommitUploadedRegularFilesInput]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.CommitUploadedRegularFilesResponse: ...
    def GetRegularFileTicketsForUpload(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.GetRegularFileWriteTicketsInput]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.GetRegularFileWriteTicketsResponse: ...
    def GetWriteTickets(self, Inputs: list[Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.WriteTicketsInput]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.FileTicketsResponse: ...
    def UpdateImanFileCommits(self, CleanupInfo: list[str]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.UpdateImanFileCommitsResponse: ...
    def GetFileTransferTickets(self, ImanFiles: list[Teamcenter.Soa.Client.Model.Strong.ImanFile]) -> Teamcenter.Services.Internal.Strong.Core._2008_06.FileManagement.GetFileTransferTicketsResponse: ...
    def CommitReplacedFiles(self, CommitInfos: list[Teamcenter.Services.Internal.Strong.Core._2010_09.FileManagement.CommitReplacedFileInfo], Flags: list[bool]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def GetPlmdFileTicketForDownload(self, Infos: list[Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.DatashareManagerDownloadInfo]) -> Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.GetPlmdFileTicketResponse: ...
    def GetPlmdFileTicketForUpload(self, Infos: list[Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.DatashareManagerUploadInfo]) -> Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.GetPlmdFileTicketResponse: ...
    def PostCleanUpFileCommits(self, Files: list[Teamcenter.Soa.Client.Model.Strong.ImanFile]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def GetPlmdFileTicketForReplace(self, Infos: list[Teamcenter.Services.Internal.Strong.Core._2017_05.FileManagement.DatashareManagerReplaceInfo]) -> Teamcenter.Services.Internal.Strong.Core._2014_10.FileManagement.GetPlmdFileTicketResponse: ...
    def GetTransientFileTicketsForDownload(self, Tickets: list[Teamcenter.Services.Internal.Strong.Core._2018_11.FileManagement.GetTransientTicketsDownloadInput]) -> Teamcenter.Services.Internal.Strong.Core._2018_11.FileManagement.GetTransientTicketsDownloadResponse: ...
    def GetDatasetTicketsForChunkedUpload(self, Inputs: list[Teamcenter.Services.Strong.Core._2006_03.FileManagement.GetDatasetWriteTicketsInputData]) -> Teamcenter.Services.Strong.Core._2006_03.FileManagement.GetDatasetWriteTicketsResponse: ...
    def GetTransientTicketsForChunkedUpload(self, TransientFileInfos: list[Teamcenter.Services.Strong.Core._2007_01.FileManagement.TransientFileInfo]) -> Teamcenter.Services.Strong.Core._2007_01.FileManagement.GetTransientFileTicketsResponse: ...

class SessionRestBindingStub(SessionService):
    def __init__(self, connection: Teamcenter.Soa.Client.Connection) -> None: ...
    def InitTypeByNames(self, TypeNames: list[str]) -> Teamcenter.Schemas.Soa._2006_03.Base.ModelSchema: ...
    def InitTypeByUids(self, Uids: list[str]) -> Teamcenter.Schemas.Soa._2006_03.Base.ModelSchema: ...
    def RefreshPOMCachePerRequest(self, Refresh: bool) -> bool: ...
    def GetProperties(self, Objects: list[Teamcenter.Soa.Client.Model.ModelObject], Attributes: list[str]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def DisableUserSessionState(self, Names: list[str]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def CancelOperation(self, Id: str) -> bool: ...
    def GetSecurityToken(self, Duration: int) -> str: ...

class SessionService:
    @staticmethod
    def getService(connection: Teamcenter.Soa.Client.Connection) -> SessionService: ...
    def InitTypeByNames(self, TypeNames: list[str]) -> Teamcenter.Schemas.Soa._2006_03.Base.ModelSchema: ...
    def InitTypeByUids(self, Uids: list[str]) -> Teamcenter.Schemas.Soa._2006_03.Base.ModelSchema: ...
    def RefreshPOMCachePerRequest(self, Refresh: bool) -> bool: ...
    def GetProperties(self, Objects: list[Teamcenter.Soa.Client.Model.ModelObject], Attributes: list[str]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def DisableUserSessionState(self, Names: list[str]) -> Teamcenter.Soa.Client.Model.ServiceData: ...
    def CancelOperation(self, Id: str) -> bool: ...
    def GetSecurityToken(self, Duration: int) -> str: ...

