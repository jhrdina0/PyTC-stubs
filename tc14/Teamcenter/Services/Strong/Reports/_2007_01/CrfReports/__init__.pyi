import System
import Teamcenter.Soa.Client.Model
import Teamcenter.Soa.Client.Model.Strong
import typing

class CreateReportDefinitionResponse:
    """
    Response from createReportDefinition.
    """
    def __init__(self, ) -> None: ...
    Reportdefinition: Teamcenter.Soa.Client.Model.ModelObject
    """report definition Tag"""
    ServiceData: Teamcenter.Soa.Client.Model.ServiceData
    """ServiceData"""

class GenerateReportCriteria:
    """
    Data needed to generate a report.
    """
    def __init__(self, ) -> None: ...
    RdTag: Teamcenter.Soa.Client.Model.ModelObject
    """The report definition."""
    StylesheetTag: Teamcenter.Soa.Client.Model.ModelObject
    """
            The style sheet Dataset . If supplied the style sheet will be applied to the
            final generated report. If this value is left null, a plain XML file will be generated
            for the report.
            """
    ContextObjects: list[Teamcenter.Soa.Client.Model.ModelObject]
    """A list of context business objects for a Item Report."""
    DatasetName: str
    """
            The name of the containing Dataset. If dataset name is provided, the generated
            report will be saved as a Dataset to Teamcenter with this given name.
            """
    CriteriaNames: list[str]
    """
            A list of criteria names  in a series of Name/Value pairs used to specify additional
            criteria (optional).
            """
    CriteriaValues: list[str]
    """
            A list of criteria values in a series of Name/Value pairs used to specify additional
            criteria (optional).
            """

class GenerateReportDefintionIdsResponse:
    """
    Response from generateReportDefintionIds.
    """
    def __init__(self, ) -> None: ...
    ReportdefinitionIds: list[ReportDefinitionIdObject]
    """A list of report definition identifiers."""
    ServiceData: Teamcenter.Soa.Client.Model.ServiceData
    """The ServiceData which includes the failure information."""

class GenerateReportResponse:
    """
    Response from generateReport.
    """
    def __init__(self, ) -> None: ...
    TransientFileReadTickets: list[str]
    """This is for future use, may be null."""
    TransientFileTicketInfos: list[TransientFileTicketInfo]
    """
            A list of TransientFileTicketInfo  objects for retrieving generated report file.
            A TransientFileTicketInfo object contains the file name, the transient ticket information
            for the generated report file.
            """
    ServiceData: Teamcenter.Soa.Client.Model.ServiceData
    """The ServiceData which includes the failure information."""

class GetReportDefinitionsResponse:
    """
    Response from getReportDefinitions.
    """
    def __init__(self, ) -> None: ...
    Reportdefinitions: list[ReportDefinitionObject]
    """a vector of ReportDefinitionObjects."""
    ServiceData: Teamcenter.Soa.Client.Model.ServiceData
    """A serviceData contains the data."""

class ReportDefinitionIdObject:
    """
    A structure associating a report definition id with the requesting client.
    """
    def __init__(self, ) -> None: ...
    ClientId: str
    """clientId"""
    ReportDefinitionId: str
    """reportDefinitionId"""

class ReportDefinitionObject:
    """
    A structure associating a report definition with the requesting client.
    """
    def __init__(self, ) -> None: ...
    ClientId: str
    """client identifier for routing purposes"""
    Reportdefinition: Teamcenter.Soa.Client.Model.Strong.ReportDefinition
    """report definition Tag"""

class ReportProperties:
    """
    Properties needed to create a report definition.
    """
    def __init__(self, ) -> None: ...
    RdId: str
    """a unique identifier for this definition, may be autogenerated or user-specified (required)"""
    RdName: str
    """the report name (optional)"""
    RdDescription: str
    """the report description (optional)"""
    RdType: int
    """integer report type identifier, e.g. item, summary or custom (required)"""
    RdClass: str
    """class of designated report type (required for item reports)"""
    RdFolderName: str
    """name of the containing folder for this report definition (optional)"""
    RdSource: str
    """solution source of this definition, e.g. Teamcenter, TcRA (optional)"""
    RdState: int
    """integer for future use, may be any value"""
    RdQuerySource: str
    """the source of the report data (required)"""
    RdPropertySource: str
    """properties to include in the report (optional)"""
    RdStylesheets: list[Teamcenter.Soa.Client.Model.ModelObject]
    """a vector of stylesheet Tags (optional)"""
    RdEntries: list[str]
    """
            a vector of strings containing the Entries in a series of Entry/Value pairs used
            to specify additional metadata (optional)
            """
    RdValues: list[str]
    """
            a vector of strings containing the Values in a series of Entry/Value pairs used to
            specify additional metadata (optional)
            """

class ReportsCriteria:
    """
    
Criteria needed to retrieve report definitions or generate report definition
ids.
At least one of the optional parameters must be included.
    """
    def __init__(self, ) -> None: ...
    ClientId: str
    """Client identifier for routing purposes (required)."""
    Category: str
    """Designates report category, e.g. item, summary or custom (optional)."""
    Source: str
    """Solution source of report definition, e.g. Teamcenter, TcRA (optional)."""
    Status: str
    """It is for future use, may be null."""
    ContextObjects: list[Teamcenter.Soa.Client.Model.ModelObject]
    """A vector of gags representing context object(s) (required for item reports)."""

class TransientFileInfo:
    """
    The information required for file upload.
    """
    def __init__(self, ) -> None: ...
    FileName: str
    """Absolute file path and name to transient volume"""
    IsText: bool
    """True if filetype is text"""

class TransientFileTicketInfo:
    """
    TransientFileInfo with a ticket.
    """
    def __init__(self, ) -> None: ...
    TransientFileInfo: TransientFileInfo
    """Information on the file to be downloaded."""
    Ticket: str
    """FMS file ticket"""

class CrfReports:
    """
    Interface CrfReports
    """
    def __init__(self , *args: typing.Any) -> None: ...
    def CreateReportDefinition(self, ReportProperties: ReportProperties) -> CreateReportDefinitionResponse:
        """    
             Creates a report definition with the specified properties.
             

Teamcenter Component:

             Business Intelligence - Capability to create and manage report definitions and generate
             reports
             
        :param ReportProperties: 
                         The report properties for the report definition.
             
        :return: The report definition and the ServiceData.
        """
        ...
    def GenerateReport(self, InputCriteria: GenerateReportCriteria, ApplicationId: str) -> GenerateReportResponse:
        """    
             Generates report (Summary Report/Custom Report/Item Report) using the specified criteria
             and the selected report style sheet. The report can be displayed with the selected
             report style. The report style is used to define how to display the report result
             in UI to end user. The report can optionally be saved as a Dataset in the
             Teamcenter database. The generated report is saved in the FMS transient volume and
             an FMS ticket is returned.
             

Use Cases:

             User can generate one report (Summary Report/Custom Report/Item Report) by selecting
             one report definition and then inputs criteria for the report query, selects one
             report style sheet, and inputs the dataset name for the report if user would like
             to save the report as a dataset in Teamcenter.
             

Teamcenter Component:

             Business Intelligence - Capability to create and manage report definitions and generate
             reports
             
        :param InputCriteria: 
                         The report definition id, style sheet information, context objects and the query
                         criteria, for the desired report,  and an optional dataset name to save the report
                         in the Teamcenter database.
             
        :param ApplicationId: 
                         For future use, may be null
             
        :return: The FMS ticket information for the generated report.
        """
        ...
    def GenerateReportDefintionIds(self, InputCriteria: list[ReportsCriteria]) -> GenerateReportDefintionIdsResponse:
        """    
             Generates new report definition id(s) based upon the specified report criteria. This
             operation is used when user creates new report definition; the report definition
             id is generated by this operation. Multiple report definition id generation is not
             supported currently.
             

Use Cases:

             User creates a new report definition from the New Report wizard. User presses the
             button to generate the report definition id for the new report definition. This operation
             will be triggered to generate the report definition id and assign to the new report
             definition.
             

Teamcenter Component:

             Business Intelligence - Capability to create and manage report definitions and generate
             reports
             
        :param InputCriteria: 
                         A list of ReportsCriteria structures which includes the report category information.
             
        :return: Failure will be returned in the ServiceData.
        """
        ...
    def GetReportDefinitions(self, InputCriteria: list[ReportsCriteria]) -> GetReportDefinitionsResponse:
        """    
             Retrieves a set of report definitions that meet the specified criteria.
             

Use Cases:

             Document set of user level use cases, should describe how user interacts with this
             operation to accomplish the goal.
             

Teamcenter Component:

             Business Intelligence - Capability to create and manage report definitions and generate
             reports
             
        :param InputCriteria: 
                         A vector of ReportsCriteria2 structures.
             
        :return: A vector of ReportDefinitionObjects containing report definition ID's.
        """
        ...

