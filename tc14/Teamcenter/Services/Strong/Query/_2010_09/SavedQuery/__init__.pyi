import Teamcenter.Services.Strong.Query._2007_09.SavedQuery
import typing

class BusinessObjectQueryClause:
    """
    Business object query clause
    """
    def __init__(self, ) -> None: ...
    PropName: str
    """Property Name."""
    PropValue: str
    """Property Value."""
    MathOperator: str
    """
            Math Operator.  Legal math operators can be =, !=, >, >=, <, <=, Contain, IS_NULL
            or IS_NOT_NULL according to the property type.
            """
    LogicOperator: str
    """Logic Operator.  Legal logic operators are "AND" and "OR"."""

class BusinessObjectQueryInput:
    """
    Business Object Query Input
    """
    def __init__(self, ) -> None: ...
    TypeName: str
    """Name of business object type"""
    Clauses: list[BusinessObjectQueryClause]
    """Query clauses in serach criteria."""
    MaxNumToReturn: int
    """Specified maximum number of objects to return."""
    RequestId: str
    """
            Unique ID used to register the query execution task. This can be used by the caller
            to cancel the time consuming query, the value can be generated by any unique string
            generator.
            """
    ClientId: str
    """
            This unique ID is used to identify return data elements and partial errors associated
            with this input structure. This is currently not yet used by the return data elements,
            the caller can leave it empty.
            """

class SavedQuery:
    """
    Interface SavedQuery
    """
    def __init__(self , *args: typing.Any) -> None: ...
    def ExecuteBusinessObjectQueries(self, Inputs: list[BusinessObjectQueryInput]) -> Teamcenter.Services.Strong.Query._2007_09.SavedQuery.SavedQueriesResponse:
        """    
             Execute business object searches (Simple Search) and return search results.
             

Use Cases:

             Execute business object searches (Simple Search).
             

Teamcenter Component:

             Search - The capabilities to allow searching objects using the business object symantics
             that have been persisted via the persistence management.
             
        :param Inputs: 
                         Business object query inputs
             
        :return: Contains (1) a set of QueryResults data structures and (2) a ServiceData. Partial
             errors are stored and referenced by input vector indexes.
        """
        ...

