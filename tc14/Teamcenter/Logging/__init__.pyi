import Serilog
import Serilog.Core
import Serilog.Events
import System.IO
import typing

class LogCorrelation:
    HTTP_HEADER_REQUEST_ID: str
    HTTP_HEADER_USER_ACTION: str
    HTTP_HEADER_SESSION_ID: str
    ENV_VAR_REQUEST_ID: str
    ENV_VAR_USER_ACTION: str
    ENV_VAR_SESSION_ID: str
    RequestID: str
    UserAction: str
    SessionID: str
    @staticmethod
    def Clean() -> None: ...
    @staticmethod
    @typing.overload
    def Create() -> LogCorrelation: ...
    @staticmethod
    @typing.overload
    def Create(sessionSuffix: str) -> LogCorrelation: ...
    @staticmethod
    @typing.overload
    def CreateFromParent(sessionID: str, userAction: str, requestID: str) -> LogCorrelation: ...
    @staticmethod
    @typing.overload
    def CreateFromParent() -> LogCorrelation: ...
    @staticmethod
    def CreateFromLegacyID(id: str) -> LogCorrelation: ...
    @staticmethod
    def Get() -> LogCorrelation: ...
    def ToString(self) -> str: ...
    def SetRequestID(self) -> None: ...
    def get_RequestID(self) -> str: ...
    def ClearRequestID(self) -> None: ...
    def SetUserAction(self, userAction: str) -> None: ...
    def ClearUserAction(self) -> None: ...
    def get_UserAction(self) -> str: ...
    def get_SessionID(self) -> str: ...
    def GetLegacyID(self) -> str: ...

class TcSerilogManager:
    @staticmethod
    def ResetLogConfiguration() -> None: ...
    @staticmethod
    def CreateLogger() -> Serilog.ILogger: ...
    @staticmethod
    def AddConsoleSink(level: Serilog.Events.LogEventLevel) -> None: ...
    @staticmethod
    def AddFileSink(relativeFolder: str, baseFileName: str, backups: int, level: Serilog.Events.LogEventLevel) -> System.IO.FileInfo: ...
    @staticmethod
    def AddEventLog(eventSource: str, eventLogName: str, manageEventSource: str, level: Serilog.Events.LogEventLevel) -> None: ...
    @staticmethod
    def CreatRollingFileSink(relativeFolder: str, baseFileName: str, backups: int, level: Serilog.Events.LogEventLevel) -> System.IO.FileInfo: ...

class TcEventEnricher:
    def __init__(self, ) -> None: ...
    def Enrich(self, logEvent: Serilog.Events.LogEvent, lepf: Serilog.Core.ILogEventPropertyFactory) -> None: ...

