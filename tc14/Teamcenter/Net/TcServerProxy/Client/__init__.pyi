import System
import System.Globalization
import System.IO
import System.Windows.Forms
import Teamcenter.Net.TcServerProxy.Client.res.LoginDialog
import Teamcenter.Net.TcServerProxy.Client.res.Msg
import typing

class ResponseStream:
    def __init__(self, ) -> None: ...
    def Read(self, data: list[System.Byte]) -> int: ...

class tspMsgLocalizer(Teamcenter.Net.TcServerProxy.Client.res.Msg.Msg):
    def __init__(self, ) -> None: ...

class TcServerRequest:
    def __init__(self, session: TSPSession) -> None: ...
    TCSERVERPROXYERR_TCSERVERBINDING_NO_TSP: int
    TCSERVERPROXYERR_TCSERVERBINDING_NO_TSP2: int
    TCSERVERPROXYERR_TCSERVERBINDING_BAD_ARG: int
    TSP_UNRECOGNIZEDEXCEPTION_CODE: int
    TSP_CONNECTIONEXCEPTION_CODE: int
    TSP_PROTOCOLEXCEPTION_CODE: int
    TSP_RUNTIMEEXCEPTION_CODE: int
    @staticmethod
    def TcServerProxy_Init(memoryAllocator: System.IntPtr, memoryDeallocator: System.IntPtr) -> int: ...
    @staticmethod
    def TcServerProxy_Term() -> int: ...
    @staticmethod
    def TcServerProxy_Send(pData: list[System.Byte]) -> int: ...
    @staticmethod
    def TcServerProxy_SendNoAck(pData: list[System.Byte]) -> int: ...
    @staticmethod
    def TcServerProxy_SendEOF() -> int: ...
    @staticmethod
    def TcServerProxy_Receive(pData: System.IntPtr) -> int: ...
    @staticmethod
    def TcServerProxy_GetLastError(localizedMessage: System.IntPtr&) -> int: ...
    @staticmethod
    def TcServerProxy_Complete() -> int: ...
    @staticmethod
    def Init() -> None: ...
    def Term(self) -> None: ...
    @staticmethod
    def GetLastError() -> str: ...
    @staticmethod
    def GenerateLocalTSPException(errorCode: int, errorMsg: str) -> None: ...
    @staticmethod
    def ThrowTcServerNetBindingException(majorCode: int) -> None: ...
    def SetHeader(self, header: str, value: str) -> None: ...
    @typing.overload
    def SetBody(self, reqStream: System.IO.Stream) -> None: ...
    @typing.overload
    def SetBody(self, reqBody: str) -> None: ...
    def Execute(self) -> str: ...
    def ShutdownServer(self) -> None: ...
    def WaitForTspInstruction(self) -> int: ...
    def ReadTspResponse(self) -> int: ...
    def SendCompleteRequest(self, msg: str) -> int: ...
    def SetCredentialProvider(self, credProv: CredentialProvider) -> None: ...
    def GetCredentialProvider(self) -> CredentialProvider: ...
    @staticmethod
    def DoComplete() -> None: ...
    def GetResponseCode(self) -> str: ...
    def GetResponseText(self) -> str: ...
    def GetContentType(self) -> str: ...

class DefaultCredentialProvider:
    def __init__(self, loc: System.Globalization.CultureInfo) -> None: ...
    def GetCredential(self, scope: AuthScope) -> Credential: ...

class LoginDialog(System.Windows.Forms.Form):
    def __init__(self, proxyHost: str, proxyRealm: str, locale: System.Globalization.CultureInfo) -> None: ...
    def setLocalizedText(self, locale: System.Globalization.CultureInfo) -> None: ...
    def GetUserName(self) -> str: ...
    def GetPassword(self) -> str: ...
    def GetDomain(self) -> str: ...

class LoginDialogLocalizer(Teamcenter.Net.TcServerProxy.Client.res.LoginDialog.LoginDialogRes):
    def __init__(self, ) -> None: ...

class ResponseStream:
    def __init__(self, ) -> None: ...
    def Read(self, data: list[System.Byte]) -> int: ...

class tspMsgLocalizer(Teamcenter.Net.TcServerProxy.Client.res.Msg.Msg):
    def __init__(self, ) -> None: ...

class TcServerRequest:
    def __init__(self, session: TSPSession) -> None: ...
    TCSERVERPROXYERR_TCSERVERBINDING_NO_TSP: int
    TCSERVERPROXYERR_TCSERVERBINDING_NO_TSP2: int
    TCSERVERPROXYERR_TCSERVERBINDING_BAD_ARG: int
    TSP_UNRECOGNIZEDEXCEPTION_CODE: int
    TSP_CONNECTIONEXCEPTION_CODE: int
    TSP_PROTOCOLEXCEPTION_CODE: int
    TSP_RUNTIMEEXCEPTION_CODE: int
    @staticmethod
    def TcServerProxy_Init(memoryAllocator: System.IntPtr, memoryDeallocator: System.IntPtr) -> int: ...
    @staticmethod
    def TcServerProxy_Term() -> int: ...
    @staticmethod
    def TcServerProxy_Send(pData: list[System.Byte]) -> int: ...
    @staticmethod
    def TcServerProxy_SendNoAck(pData: list[System.Byte]) -> int: ...
    @staticmethod
    def TcServerProxy_SendEOF() -> int: ...
    @staticmethod
    def TcServerProxy_Receive(pData: System.IntPtr) -> int: ...
    @staticmethod
    def TcServerProxy_GetLastError(localizedMessage: System.IntPtr&) -> int: ...
    @staticmethod
    def TcServerProxy_Complete() -> int: ...
    @staticmethod
    def Init() -> None: ...
    def Term(self) -> None: ...
    @staticmethod
    def GetLastError() -> str: ...
    @staticmethod
    def GenerateLocalTSPException(errorCode: int, errorMsg: str) -> None: ...
    @staticmethod
    def ThrowTcServerNetBindingException(majorCode: int) -> None: ...
    def SetHeader(self, header: str, value: str) -> None: ...
    @typing.overload
    def SetBody(self, reqStream: System.IO.Stream) -> None: ...
    @typing.overload
    def SetBody(self, reqBody: str) -> None: ...
    def Execute(self) -> str: ...
    def ShutdownServer(self) -> None: ...
    def WaitForTspInstruction(self) -> int: ...
    def ReadTspResponse(self) -> int: ...
    def SendCompleteRequest(self, msg: str) -> int: ...
    def SetCredentialProvider(self, credProv: CredentialProvider) -> None: ...
    def GetCredentialProvider(self) -> CredentialProvider: ...
    @staticmethod
    def DoComplete() -> None: ...
    def GetResponseCode(self) -> str: ...
    def GetResponseText(self) -> str: ...
    def GetContentType(self) -> str: ...

class AuthScope:
    def __init__(self, ProxyHost: str, ProxyPort: str, ProxyRealm: str) -> None: ...
    Host: str
    Port: str
    Realm: str
    def get_Host(self) -> str: ...
    def get_Port(self) -> str: ...
    def get_Realm(self) -> str: ...

class Credential:
    @typing.overload
    def __init__(self, ProxyUser: str, ProxyPassword: str, ProxyDomain: str) -> None: ...
    @typing.overload
    def __init__(self, ProxyUser: str, ProxyPassword: str) -> None: ...
    User: str
    Password: str
    Domain: str
    def get_User(self) -> str: ...
    def get_Password(self) -> str: ...
    def get_Domain(self) -> str: ...

class CredentialProvider:
    def __init__(self , *args: typing.Any) -> None: ...
    def GetCredential(self, scope: AuthScope) -> Credential: ...

class CredentialsUnavailableException(System.Exception):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, msg: str, innerException: System.Exception) -> None: ...

class TcServerRequestWrapper:
    def __init__(self, tspSession: TSPSession) -> None: ...
    HEADER_SERVICENAME: str
    HEADER_OPERATIONNAME: str
    HEADER_XML_RPC: str
    HEADER_USE_COMPRESSION: str
    HEADER_LOG_CORRELATION: str
    HEADER_ENV_NAME: str
    HEADER_USE_CALLBACK: str
    HEADER_LOCALE: str
    HEADER_SERVER_URL: str
    HEADER_BASE_SERVER_URL: str
    HEADER_FULL_SERVER_URL: str
    HEADER_SSO_LOGIN_URL: str
    HEADER_SESSIONID: str
    HEADER_TSP_CONTENT_TYPE: str
    HEADER_CONTENT_TYPE_APP_XML: str
    HEADER_CONTENT_TYPE_XML_RPC: str
    HEADER_GET_HTTP_RESPONSE: str
    HEADER_SHUTDOWN_SERVER: str
    HEADER_GEN_PKCS7_SIGS: str
    RESPONSE_HEADER_SESSIONID: str
    RESPONSE_HEADER_COMPRESSION: str
    RESPONSE_HEADER_RESPONSE_CODE: str
    RESPONSE_HEADER_RESPONSE_TEXT: str
    RESPONSE_HEADER_CONTENT_TYPE: str
    def Term(self) -> None: ...
    def SetHeader(self, headerName: str, headerValue: str) -> None: ...
    @typing.overload
    def SetBody(self, reqStream: System.IO.Stream) -> None: ...
    @typing.overload
    def SetBody(self, reqBody: str) -> None: ...
    def Execute(self) -> str: ...
    def ShutdownServer(self) -> None: ...
    def SetCredentialProvider(self, credProv: CredentialProvider) -> None: ...
    def GetResponseCode(self) -> str: ...
    def GetResponseText(self) -> str: ...
    def GetContentType(self) -> str: ...
    @staticmethod
    def Init() -> None: ...
    @staticmethod
    def TcServerSimpleRequest(url: str, body: str, sessionID: str, appContentType: str, xmlRpcContentType: str) -> str: ...

class NetBindingLoader:
    def __init__(self, ) -> None: ...
    @staticmethod
    def GetTcServerNetBinding() -> None: ...
    @staticmethod
    def GetTcServerRequestInstance(session: TSPSession) -> typing.Any: ...
    @staticmethod
    def GetTcServerRequestType() -> System.Type: ...
    @staticmethod
    def GetEnvironmentInfoType() -> System.Type: ...
    @staticmethod
    def GetEnvironmentInfoInstance() -> typing.Any: ...

class TSPConnectionException(TSPException):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...

class TSPException(System.Exception):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...
    def getErrorCode(self) -> int: ...

class TSPProtocolException(TSPException):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...

class TSPRuntimeException(TSPException):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...

class TSPSession:
    def __init__(self, ) -> None: ...
    def SetSessionId(self, value: str) -> None: ...
    def GetSessionId(self) -> str: ...

class TSPUnrecognisedException(TSPException):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...

class CredentialsUnavailableException(System.Exception):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, msg: str, innerException: System.Exception) -> None: ...

class TSPConnectionException(TSPException):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...

class TSPException(System.Exception):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...
    def getErrorCode(self) -> int: ...

class TSPProtocolException(TSPException):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...

class TSPRuntimeException(TSPException):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...

class TSPSession:
    def __init__(self, ) -> None: ...

class TSPUnrecognisedException(TSPException):
    @typing.overload
    def __init__(self, msg: str) -> None: ...
    @typing.overload
    def __init__(self, errorNum: int, msg: str) -> None: ...

class AuthScope:
    def __init__(self, ProxyHost: str, ProxyPort: str, ProxyRealm: str) -> None: ...
    Host: str
    Port: str
    Realm: str
    def get_Host(self) -> str: ...
    def get_Port(self) -> str: ...
    def get_Realm(self) -> str: ...

class Credential:
    @typing.overload
    def __init__(self, ProxyUser: str, ProxyPassword: str, ProxyDomain: str) -> None: ...
    @typing.overload
    def __init__(self, ProxyUser: str, ProxyPassword: str) -> None: ...
    User: str
    Password: str
    Domain: str
    def get_User(self) -> str: ...
    def get_Password(self) -> str: ...
    def get_Domain(self) -> str: ...

class TcServerRequestWrapper:
    def __init__(self, tspSession: TSPSession) -> None: ...
    HEADER_SERVICENAME: str
    HEADER_OPERATIONNAME: str
    HEADER_XML_RPC: str
    HEADER_USE_COMPRESSION: str
    HEADER_LOG_CORRELATION: str
    HEADER_ENV_NAME: str
    HEADER_USE_CALLBACK: str
    HEADER_LOCALE: str
    HEADER_SERVER_URL: str
    HEADER_BASE_SERVER_URL: str
    HEADER_FULL_SERVER_URL: str
    HEADER_SSO_LOGIN_URL: str
    HEADER_SESSIONID: str
    HEADER_TSP_CONTENT_TYPE: str
    HEADER_CONTENT_TYPE_APP_XML: str
    HEADER_CONTENT_TYPE_XML_RPC: str
    HEADER_GET_HTTP_RESPONSE: str
    HEADER_SHUTDOWN_SERVER: str
    HEADER_GEN_PKCS7_SIGS: str
    RESPONSE_HEADER_SESSIONID: str
    RESPONSE_HEADER_COMPRESSION: str
    RESPONSE_HEADER_RESPONSE_CODE: str
    RESPONSE_HEADER_RESPONSE_TEXT: str
    RESPONSE_HEADER_CONTENT_TYPE: str
    def Term(self) -> None: ...
    def SetHeader(self, headerName: str, headerValue: str) -> None: ...
    @typing.overload
    def SetBody(self, reqStream: System.IO.Stream) -> None: ...
    @typing.overload
    def SetBody(self, reqBody: str) -> None: ...
    def Execute(self) -> str: ...
    def ShutdownServer(self) -> None: ...
    def SetCredentialProvider(self, credProv: CredentialProvider) -> None: ...
    def GetResponseCode(self) -> str: ...
    def GetResponseText(self) -> str: ...
    def GetContentType(self) -> str: ...
    @staticmethod
    def Init() -> None: ...
    @staticmethod
    def TcServerSimpleRequest(url: str, body: str, sessionID: str, appContentType: str, xmlRpcContentType: str) -> str: ...

class NetBindingLoader:
    def __init__(self, ) -> None: ...
    @staticmethod
    def GetTcServerNetBinding() -> None: ...
    @staticmethod
    def GetTcServerRequestInstance(session: TSPSession) -> typing.Any: ...
    @staticmethod
    def GetTcServerRequestType() -> System.Type: ...
    @staticmethod
    def GetEnvironmentInfoType() -> System.Type: ...
    @staticmethod
    def GetEnvironmentInfoInstance() -> typing.Any: ...

class CredentialProvider:
    def __init__(self , *args: typing.Any) -> None: ...
    def GetCredential(self, scope: AuthScope) -> Credential: ...

