import System
import typing

class CSSOConfigurationException(CSSOException):
    def __init__(self, innerException: System.Exception) -> None: ...

class CSSOLoginFailureException(CSSOException):
    def __init__(self, innerException: System.Exception) -> None: ...

class CSSOLoginCancelledException(CSSOException):
    def __init__(self, innerException: System.Exception) -> None: ...

class CSSOAuthorizationException(CSSOException):
    def __init__(self, innerException: System.Exception) -> None: ...

class CSSOSystemException(CSSOException):
    def __init__(self, innerException: System.Exception) -> None: ...

class CSSOInvalidSessionException(CSSOException):
    def __init__(self, innerException: System.Exception) -> None: ...

class CSSOInvalidTokenException(CSSOException):
    def __init__(self, innerException: System.Exception) -> None: ...

class CSSODuplicateHandleException(CSSOException):
    def __init__(self, innerException: System.Exception) -> None: ...

class CSSOException(System.Exception):
    def __init__(self, innerException: System.Exception) -> None: ...

class ISSOSession:
    def __init__(self , *args: typing.Any) -> None: ...
    @typing.overload
    def generateSSOTokens(self, targetAppid: str) -> list[ISSOToken]: ...
    @typing.overload
    def generateSSOTokens(self, targetAppid: str, pseudoAppId: str) -> list[ISSOToken]: ...
    @typing.overload
    def generateSSOAppToken(self, targetAppid: str) -> ISSOAppToken: ...
    @typing.overload
    def generateSSOAppToken(self, targetAppid: str, pseudoAppId: str) -> ISSOAppToken: ...
    def getStringLocale(self) -> str: ...
    def getProxyAuthorizationCookie(self, appID: str) -> list[IHttpCookieToken]: ...

class ISSOToken:
    def __init__(self , *args: typing.Any) -> None: ...
    pass

class ISSOAppToken:
    def __init__(self , *args: typing.Any) -> None: ...
    def getAppUserId(self) -> str: ...
    def getSSOSessionKey(self) -> str: ...

class IHttpCookieToken:
    def __init__(self , *args: typing.Any) -> None: ...
    def getName(self) -> str: ...
    def getPath(self) -> str: ...
    def getValue(self) -> str: ...
    def setValue(self, value: str) -> None: ...
    def equals(self, obj: typing.Any) -> bool: ...

class ISSOClient:
    def __init__(self , *args: typing.Any) -> None: ...
    def getSSOSession(self, new_session: bool) -> ISSOSession: ...

class ISSOLoginInput:
    def __init__(self , *args: typing.Any) -> None: ...
    def USERNAME(self) -> str: ...
    def PASSWORD(self) -> str: ...
    def LOCALE(self) -> str: ...
    def NEWPASSWORD(self) -> str: ...
    def get(self, key: typing.Any) -> typing.Any: ...
    def put(self, key: typing.Any, val: typing.Any) -> typing.Any: ...

class ISSOLoginStatus:
    def __init__(self , *args: typing.Any) -> None: ...
    def userIsAuthenticated(self) -> bool: ...

class ISSOAppSession:
    def __init__(self , *args: typing.Any) -> None: ...
    def getSessionHandle(self) -> str: ...
    def getLoginInput(self) -> ISSOLoginInput: ...
    def generateSSOTokens(self, targetAppId: str) -> list[ISSOToken]: ...
    def generateSSOAppToken(self, targetAppid: str) -> ISSOAppToken: ...
    def validateAppToken(self, userId: str, sessionKey: str) -> None: ...
    def authenticate(self, credentials: ISSOLoginInput) -> ISSOLoginStatus: ...
    def logout(self) -> None: ...

class NetBindingLoader:
    def __init__(self, ) -> None: ...
    @staticmethod
    def GetISSOClientInstance(ssoLoginURL: str) -> ISSOClient: ...
    @staticmethod
    def GetISSOAppSessionInstance(appId: str, sessionHandle: str, ssoIdentityURL: str) -> ISSOAppSession: ...
    @staticmethod
    def GetISSOLoginInputInstance() -> ISSOLoginInput: ...

